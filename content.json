{"pages":[],"posts":[{"title":"deploy","text":"Deploying1232313123bbbThe following guides are based on some shared assumptions: You are placing your docs inside the docs directory of your project; You are using the default build output location (.vuepress/dist); VuePress is installed as a local dependency in your project, and you have setup the following npm scripts: 12345{ &quot;scripts&quot;: { &quot;docs:build&quot;: &quot;vuepress build docs&quot; }} GitHub Pages Set the correct base in docs/.vuepress/config.js. If you are deploying to https://&lt;USERNAME&gt;.github.io/, you can omit base as it defaults to &quot;/&quot;. If you are deploying to https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;/, for example your repository is at https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;, then set base to &quot;/&lt;REPO&gt;/&quot;. Inside your project, create deploy.sh with the following content (with highlighted lines uncommented appropriately), and run it to deploy: 12345678910111213141516171819202122232425#!/usr/bin/env sh# abort on errorsset -e# buildnpm run docs:build# navigate into the build output directorycd docs/.vuepress/dist# if you are deploying to a custom domain# echo 'www.example.com' &gt; CNAMEgit initgit add -Agit commit -m 'deploy'# if you are deploying to https://&lt;USERNAME&gt;.github.io# git push -f git@github.com:&lt;USERNAME&gt;/&lt;USERNAME&gt;.github.io.git master# if you are deploying to https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;# git push -f git@github.com:&lt;USERNAME&gt;/&lt;REPO&gt;.git master:gh-pagescd - ::: tipYou can also run the above script in your CI setup to enable automatic deployment on each push.::: GitHub Pages and Travis CI Set the correct base in docs/.vuepress/config.js. If you are deploying to https://&lt;USERNAME or GROUP&gt;.github.io/, you can omit base as it defaults to &quot;/&quot;. If you are deploying to https://&lt;USERNAME or GROUP&gt;.github.io/&lt;REPO&gt;/, for example your repository is at https://github.com/&lt;USERNAME&gt;/&lt;REPO&gt;, then set base to &quot;/&lt;REPO&gt;/&quot;. Create a file named .travis.yml in the root of your project. Run yarn or npm install locally and commit the generated lockfile (that is yarn.lock or package-lock.json). Use the GitHub Pages deploy provider template, and follow the Travis CI documentation. 123456789101112131415language: node_jsnode_js: - lts/*install: - yarn install # npm ciscript: - yarn docs:build # npm run docs:builddeploy: provider: pages skip_cleanup: true local_dir: docs/.vuepress/dist github_token: $GITHUB_TOKEN # A token generated on GitHub allowing Travis to push code on you repository. Set in the Travis settings page of your repository, as a secure variable keep_history: true on: branch: master GitLab Pages and GitLab CI Set the correct base in docs/.vuepress/config.js. If you are deploying to https://&lt;USERNAME or GROUP&gt;.gitlab.io/, you can omit base as it defaults to &quot;/&quot;. If you are deploying to https://&lt;USERNAME or GROUP&gt;.gitlab.io/&lt;REPO&gt;/, for example your repository is at https://gitlab.com/&lt;USERNAME&gt;/&lt;REPO&gt;, then set base to &quot;/&lt;REPO&gt;/&quot;. Set dest in .vuepress/config.js to public. Create a file called .gitlab-ci.yml in the root of your project with the content below. This will build and deploy your site whenever you make changes to your content: 1234567891011121314image: node:10.22.0pages: cache: paths: - node_modules/ script: - yarn install # npm install - yarn docs:build # npm run docs:build artifacts: paths: - public only: - master Netlify On Netlify, setup up a new project from GitHub with the following settings: Build Command: vuepress build docs or yarn docs:build or npm run docs:build Publish directory: docs/.vuepress/dist Hit the deploy button. Google Firebase Make sure you have firebase-tools installed. Create firebase.json and .firebaserc at the root of your project with the following content: firebase.json: 123456{ &quot;hosting&quot;: { &quot;public&quot;: &quot;./docs/.vuepress/dist&quot;, &quot;ignore&quot;: [] }} .firebaserc: 12345{ &quot;projects&quot;: { &quot;default&quot;: &quot;&lt;YOUR_FIREBASE_ID&gt;&quot; }} After running yarn docs:build or npm run docs:build, deploy using the command firebase deploy. Surge First install surge, if you havenâ€™t already. Run yarn docs:build or npm run docs:build. Deploy to surge by typing surge docs/.vuepress/dist. You can also deploy to a custom domain by adding surge docs/.vuepress/dist yourdomain.com. Heroku Install Heroku CLI. Create a Heroku account by signing up. Run heroku login and fill in your Heroku credentials: 1heroku login Create a file called static.json in the root of your project with the below content: static.json: 123{ &quot;root&quot;: &quot;./docs/.vuepress/dist&quot;} This is the configuration of your site; read more at heroku-buildpack-static. Set up your Heroku git remote: 12345678910# version changegit initgit add .git commit -m &quot;My site ready for deployment.&quot;# creates a new app with a specified nameheroku apps:create example# set buildpack for static sitesheroku buildpacks:set https://github.com/heroku/heroku-buildpack-static.git Deploy your site: 12345# publish sitegit push heroku master# opens a browser to view the Dashboard version of Heroku CIheroku open VercelSee Creating and Deploying a VuePress App with Vercel.","link":"/2021/02/01/deploy/"}],"tags":[{"name":"other","slug":"other","link":"/tags/other/"}],"categories":[]}