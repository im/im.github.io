<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>javascript on Cotan</title><link>/tags/javascript/</link><description>Recent content in javascript on Cotan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 05 Nov 2023 00:00:00 -0400</lastBuildDate><atom:link href="/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>navigator.registerProtocolHandler</title><link>/blog/other/navigator-registerprotocolhandler/</link><pubDate>Sun, 05 Nov 2023 00:00:00 -0400</pubDate><guid>/blog/other/navigator-registerprotocolhandler/</guid><description>navigator.registerProtocolHandler 是一个 Web API，用于注册自定义协议处理程序。通过使用这个 API，您可以告诉浏览器如何处理特定的自定义协议，例如打开特定的应用程序或执行特定的操作。这对于创建与操作系统或其他应用程序集成的 Web 应用程序非常有用。
如何使用 navigator.registerProtocolHandler :hammer_and_wrench: 使用 navigator.</description></item><item><title>URL Scheme（URL协议）</title><link>/blog/other/url-scheme/</link><pubDate>Tue, 04 Jul 2023 00:00:00 -0400</pubDate><guid>/blog/other/url-scheme/</guid><description>在移动应用程序中，URL Scheme是一种用于在应用程序之间进行通信的机制。它允许一个应用程序通过特定的URL来打开另一个应用程序，并在打开后执行一些特定的操作。
URL Scheme的结构 一个URL Scheme是一个以特定格式构建的URL。它通常由两部分组成：Scheme和Path。
Scheme：Scheme是URL的开头部分，用于指定要打开的应用程序。它以字母开头，后面跟随着字母、数字和一些特殊字符，例如myapp://。 Path：Path是Scheme之后的部分，用于指定在目标应用程序中要执行的具体操作。它可以是一个命令、参数或其他标识符，例如open?item=123。 URL Scheme的用途 URL Scheme可以用于多种用途，包括但不限于以下几个方面：</description></item><item><title>js高阶函数</title><link>/blog/js/higher-order-function/</link><pubDate>Fri, 26 May 2023 00:00:00 -0400</pubDate><guid>/blog/js/higher-order-function/</guid><description>JavaScript的高阶函数是一个非常强大的特性，它允许我们编写更加灵活和可重用的代码。在本文中，我们将探讨高阶函数的概念、它们如何实现以及一些示例。
什么是高阶函数 高阶函数是指接受一个或多个函数作为参数，并可以返回函数作为结果的函数。这种函数可以用来将其他函数“包装起来”或者实现某种通用的行为。ES6的箭头函数使得编写高阶函数变得更加简单和方便。
高阶函数的实现 下面是一个使用普通函数实现高阶函数的例子：
function map(arr, fn) { const mappedArr = []; for (let i=0; i&amp;lt;arr.</description></item></channel></rss>