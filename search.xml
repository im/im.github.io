<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>gitsubmodule</title>
      <link href="2021/05/28/git/gitsubmodule/"/>
      <url>2021/05/28/git/gitsubmodule/</url>
      
        <content type="html"><![CDATA[<h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git submodule add -b [指定分支] [仓库地址] [路径]</span><br><span class="line"></span><br><span class="line">example:</span><br><span class="line"></span><br><span class="line">git submodule add -b icarus https://github.com/im/hexo-theme.git themes/icarus</span><br></pre></td></tr></table></figure><p>命令执行完成，会在当前工程根路径下生成一个名为 <code>.gitmodules</code> 的文件，其中记录了子模块的信息。</p><h3 id="gitmodules"><a href="#gitmodules" class="headerlink" title=".gitmodules"></a>.gitmodules</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[submodule &quot;themes/icarus&quot;]</span><br><span class="line">    path = themes/icarus</span><br><span class="line">    url = https://github.com/im/hexo-theme.git</span><br><span class="line">    branch = icarus</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p><code>submodule</code> 的删除稍微麻烦点：首先，要在 <code>.gitmodules</code> 文件中删除相应配置信息。然后，执行 <code>git rm –cached</code> 命令将子模块所在的文件从 <code>git</code> 中删除。</p><h3 id="下载的工程带有submodule"><a href="#下载的工程带有submodule" class="headerlink" title="下载的工程带有submodule"></a>下载的工程带有submodule</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update --init --recursive</span><br></pre></td></tr></table></figure><h3 id="查看sumodule状态"><a href="#查看sumodule状态" class="headerlink" title="查看sumodule状态"></a>查看sumodule状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule foreach git status</span><br></pre></td></tr></table></figure><p>#git</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git修改远程仓库地址</title>
      <link href="2021/05/28/git/git%E4%BF%AE%E6%94%B9%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80/"/>
      <url>2021/05/28/git/git%E4%BF%AE%E6%94%B9%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<h2 id="命令直接修改"><a href="#命令直接修改" class="headerlink" title="命令直接修改"></a>命令直接修改</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin [url]</span><br></pre></td></tr></table></figure><h2 id="先删后加"><a href="#先删后加" class="headerlink" title="先删后加"></a>先删后加</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br><span class="line">git remote add origin [url]</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="直接修改配置文件"><a href="#直接修改配置文件" class="headerlink" title="直接修改配置文件"></a>直接修改配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> .git</span><br><span class="line">vim config</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[core]</span><br><span class="line">    repositoryformatversion = 0</span><br><span class="line">    filemode = <span class="literal">true</span></span><br><span class="line">    bare = <span class="literal">false</span></span><br><span class="line">    logallrefupdates = <span class="literal">true</span></span><br><span class="line">    ignorecase = <span class="literal">true</span></span><br><span class="line">    precomposeunicode = <span class="literal">true</span></span><br><span class="line">[remote <span class="string">&quot;origin&quot;</span>]</span><br><span class="line">    url = https://github.com/im/im.github.io.git</span><br><span class="line">    fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line">[branch <span class="string">&quot;main&quot;</span>]</span><br><span class="line">    remote = origin</span><br><span class="line">    merge = refs/heads/main</span><br><span class="line">[submodule <span class="string">&quot;themes/icarus&quot;</span>]</span><br><span class="line">    active = <span class="literal">true</span></span><br><span class="line">    url = https://github.com/im/hexo-theme.git</span><br><span class="line">[submodule <span class="string">&quot;themes/cactus&quot;</span>]</span><br><span class="line">    url = https://github.com/im/hexo-theme.git</span><br><span class="line">    active = <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="查看远程地址"><a href="#查看远程地址" class="headerlink" title="查看远程地址"></a>查看远程地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>#git</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="2021/05/28/git/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>2021/05/28/git/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="恢复修改过的文件"><a href="#恢复修改过的文件" class="headerlink" title="恢复修改过的文件"></a>恢复修改过的文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout file_name</span><br></pre></td></tr></table></figure><h3 id="获取远程分支"><a href="#获取远程分支" class="headerlink" title="获取远程分支"></a>获取远程分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout --track origin/branch_name</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="本地分支关联远程分支"><a href="#本地分支关联远程分支" class="headerlink" title="本地分支关联远程分支"></a>本地分支关联远程分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream-to=origin/[branch_name] [branch_name]</span><br></pre></td></tr></table></figure><h3 id="合并某一次提交"><a href="#合并某一次提交" class="headerlink" title="合并某一次提交"></a>合并某一次提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git cherry-pick commit_id</span><br></pre></td></tr></table></figure><h3 id="查看最近3条更新日志，并且简单显示修改的文件"><a href="#查看最近3条更新日志，并且简单显示修改的文件" class="headerlink" title="查看最近3条更新日志，并且简单显示修改的文件"></a>查看最近3条更新日志，并且简单显示修改的文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看最近3条更新日志，并且简单显示修改的文件 </span></span><br><span class="line">git <span class="built_in">log</span> -3 -—<span class="built_in">stat</span></span><br></pre></td></tr></table></figure><h3 id="命令行看提交记录图形"><a href="#命令行看提交记录图形" class="headerlink" title="命令行看提交记录图形"></a>命令行看提交记录图形</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> --oneline --graph </span><br></pre></td></tr></table></figure><h3 id="查看指定提交的内容"><a href="#查看指定提交的内容" class="headerlink" title="查看指定提交的内容"></a>查看指定提交的内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show [commit_id] -—<span class="built_in">stat</span></span><br></pre></td></tr></table></figure><h3 id="恢复修改过的文件-1"><a href="#恢复修改过的文件-1" class="headerlink" title="恢复修改过的文件"></a>恢复修改过的文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git chekout [file_name]</span><br></pre></td></tr></table></figure><h3 id="本地分支推送到远程分支"><a href="#本地分支推送到远程分支" class="headerlink" title="本地分支推送到远程分支"></a>本地分支推送到远程分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -—set-upstream origin [branch_nam]</span><br></pre></td></tr></table></figure><h3 id="将远程分支拉到本地"><a href="#将远程分支拉到本地" class="headerlink" title="将远程分支拉到本地"></a>将远程分支拉到本地</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout —track origin/branch_name</span><br></pre></td></tr></table></figure><h3 id="合并某一次提交到指定分支"><a href="#合并某一次提交到指定分支" class="headerlink" title="合并某一次提交到指定分支"></a>合并某一次提交到指定分支</h3><pre><code>* 获取此次提交的commit_id * 切换到需要合并的分支 </code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git cherry-pick [commit_id]</span><br></pre></td></tr></table></figure><h3 id="远程分支覆盖本地分支"><a href="#远程分支覆盖本地分支" class="headerlink" title="远程分支覆盖本地分支"></a>远程分支覆盖本地分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch -—all // fetch所有分支上的内容，也可以选择只备份一部分内容  </span><br><span class="line">git reset -—hard origin/master // 重置本地分支（这里master要修改为对应的分支名）  </span><br><span class="line">git pull </span><br></pre></td></tr></table></figure><h3 id="clone-远程仓库"><a href="#clone-远程仓库" class="headerlink" title="clone 远程仓库"></a>clone 远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> ssh://git@github.com:im/im.github.io.git</span><br></pre></td></tr></table></figure><h3 id="初始化本地-git-仓库（新建仓库）"><a href="#初始化本地-git-仓库（新建仓库）" class="headerlink" title="初始化本地 git 仓库（新建仓库）"></a>初始化本地 git 仓库（新建仓库）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="查看当前版本状态（是否修改）"><a href="#查看当前版本状态（是否修改）" class="headerlink" title="查看当前版本状态（是否修改）"></a>查看当前版本状态（是否修改）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h3 id="显示所有未添加至-index-的变更"><a href="#显示所有未添加至-index-的变更" class="headerlink" title="显示所有未添加至 index 的变更"></a>显示所有未添加至 index 的变更</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure><h3 id="比较与上一个版本的差异"><a href="#比较与上一个版本的差异" class="headerlink" title="比较与上一个版本的差异"></a>比较与上一个版本的差异</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD^ / HEAD -- ./lib</span><br></pre></td></tr></table></figure><h3 id="增加更改过的文件至-index"><a href="#增加更改过的文件至-index" class="headerlink" title="增加更改过的文件至 index"></a>增加更改过的文件至 index</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . / add * ...</span><br></pre></td></tr></table></figure><h3 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m ‘xxx’</span><br></pre></td></tr></table></figure><h3 id="合并上一次提交（用于反复修改）"><a href="#合并上一次提交（用于反复修改）" class="headerlink" title="合并上一次提交（用于反复修改）"></a>合并上一次提交（用于反复修改）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git commit -amend -m ‘xxx’</span><br><span class="line"></span><br><span class="line">add 和 commit 合为一步</span><br><span class="line"></span><br><span class="line">git commit -am ‘xxx’</span><br></pre></td></tr></table></figure><h3 id="显示日志"><a href="#显示日志" class="headerlink" title="显示日志"></a>显示日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><h3 id="显示某个提交的详细内容"><a href="#显示某个提交的详细内容" class="headerlink" title="显示某个提交的详细内容"></a>显示某个提交的详细内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show &lt;commit&gt;</span><br></pre></td></tr></table></figure><h3 id="在每一行显示-commit-号-提交者-最早提交日期"><a href="#在每一行显示-commit-号-提交者-最早提交日期" class="headerlink" title="在每一行显示 commit 号,提交者,最早提交日期"></a>在每一行显示 commit 号,提交者,最早提交日期</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git blame &lt;file&gt;</span><br></pre></td></tr></table></figure><h3 id="显示本地分支"><a href="#显示本地分支" class="headerlink" title="显示本地分支"></a>显示本地分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;branch&gt;</span><br></pre></td></tr></table></figure><h3 id="新建分支"><a href="#新建分支" class="headerlink" title="新建分支"></a>新建分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch &lt;new-branch&gt;</span><br></pre></td></tr></table></figure><h3 id="创建新分支跟踪远程分支"><a href="#创建新分支跟踪远程分支" class="headerlink" title="创建新分支跟踪远程分支"></a>创建新分支跟踪远程分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --track &lt;new&gt; &lt;remote&gt;</span><br></pre></td></tr></table></figure><h3 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure><h3 id="给当前分支打标签"><a href="#给当前分支打标签" class="headerlink" title="给当前分支打标签"></a>给当前分支打标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag &lt;tag-name&gt;</span><br></pre></td></tr></table></figure><h3 id="列出远程分支详细信息"><a href="#列出远程分支详细信息" class="headerlink" title="列出远程分支详细信息"></a>列出远程分支详细信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><h3 id="显示某个分支信息"><a href="#显示某个分支信息" class="headerlink" title="显示某个分支信息"></a>显示某个分支信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote show &lt;remote&gt;</span><br></pre></td></tr></table></figure><h3 id="添加一个新的远程仓库"><a href="#添加一个新的远程仓库" class="headerlink" title="添加一个新的远程仓库"></a>添加一个新的远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add &lt;remote&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><h3 id="获取远程分支，但不更新本地分支，另需-merge"><a href="#获取远程分支，但不更新本地分支，另需-merge" class="headerlink" title="获取远程分支，但不更新本地分支，另需 merge"></a>获取远程分支，但不更新本地分支，另需 merge</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch &lt;remote&gt;</span><br></pre></td></tr></table></figure><h3 id="获取远程分支，并更新本地分支"><a href="#获取远程分支，并更新本地分支" class="headerlink" title="获取远程分支，并更新本地分支"></a>获取远程分支，并更新本地分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><h3 id="推送本地更新到远程分支"><a href="#推送本地更新到远程分支" class="headerlink" title="推送本地更新到远程分支"></a>推送本地更新到远程分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push &lt;remote&gt; &lt;branch&gt;</span><br></pre></td></tr></table></figure><h3 id="删除一个远程分支"><a href="#删除一个远程分支" class="headerlink" title="删除一个远程分支"></a>删除一个远程分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push &lt;remote&gt; --delete &lt;branch&gt;</span><br></pre></td></tr></table></figure><h3 id="推送本地标签"><a href="#推送本地标签" class="headerlink" title="推送本地标签"></a>推送本地标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --tags</span><br></pre></td></tr></table></figure><h3 id="合并分支到当前分支，存在两个"><a href="#合并分支到当前分支，存在两个" class="headerlink" title="合并分支到当前分支，存在两个"></a>合并分支到当前分支，存在两个</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure><h3 id="合并分支到当前分支，存在一个"><a href="#合并分支到当前分支，存在一个" class="headerlink" title="合并分支到当前分支，存在一个"></a>合并分支到当前分支，存在一个</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase &lt;branch&gt;</span><br></pre></td></tr></table></figure><h3 id="回到执行-rebase-之前"><a href="#回到执行-rebase-之前" class="headerlink" title="回到执行 rebase 之前"></a>回到执行 rebase 之前</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git rebase --abort 解决矛盾后继续执行 rebase  git rebase --<span class="built_in">continue</span> 使用 mergetool 解决冲突</span><br><span class="line"></span><br><span class="line">git mergetool</span><br></pre></td></tr></table></figure><h3 id="使用冲突文件解决冲突"><a href="#使用冲突文件解决冲突" class="headerlink" title="使用冲突文件解决冲突"></a>使用冲突文件解决冲突</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add &lt;resolve-file&gt;</span><br><span class="line"></span><br><span class="line">git rm &lt;resolved-file&gt;</span><br></pre></td></tr></table></figure><h3 id="将当前版本重置为-HEAD（用于-merge-失败）"><a href="#将当前版本重置为-HEAD（用于-merge-失败）" class="headerlink" title="将当前版本重置为 HEAD（用于 merge 失败）"></a>将当前版本重置为 HEAD（用于 merge 失败）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD</span><br></pre></td></tr></table></figure><h3 id="将当前版本重置至某一个提交状态（慎用！）"><a href="#将当前版本重置至某一个提交状态（慎用！）" class="headerlink" title="将当前版本重置至某一个提交状态（慎用！）"></a>将当前版本重置至某一个提交状态（慎用！）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard &lt;commit&gt;</span><br></pre></td></tr></table></figure><h3 id="将当前版本重置至某一个提交状态，代码不变"><a href="#将当前版本重置至某一个提交状态，代码不变" class="headerlink" title="将当前版本重置至某一个提交状态，代码不变"></a>将当前版本重置至某一个提交状态，代码不变</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset &lt;commit&gt;</span><br></pre></td></tr></table></figure><h3 id="重置至某一状态，保留版本库中不同的文件"><a href="#重置至某一状态，保留版本库中不同的文件" class="headerlink" title="重置至某一状态，保留版本库中不同的文件"></a>重置至某一状态，保留版本库中不同的文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --merge &lt;commit&gt;</span><br></pre></td></tr></table></figure><h3 id="重置至某一状态，重置变化的文件，代码改变"><a href="#重置至某一状态，重置变化的文件，代码改变" class="headerlink" title="重置至某一状态，重置变化的文件，代码改变"></a>重置至某一状态，重置变化的文件，代码改变</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --keep &lt;commit&gt;</span><br></pre></td></tr></table></figure><h3 id="丢弃本地更改信息并将其存入特定文件"><a href="#丢弃本地更改信息并将其存入特定文件" class="headerlink" title="丢弃本地更改信息并将其存入特定文件"></a>丢弃本地更改信息并将其存入特定文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout HEAD &lt;file&gt;</span><br></pre></td></tr></table></figure><h3 id="撤销提交"><a href="#撤销提交" class="headerlink" title="撤销提交"></a>撤销提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git revert &lt;commit&gt;</span><br></pre></td></tr></table></figure><p>#git</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git添加sshkey</title>
      <link href="2021/05/28/git/git%E6%B7%BB%E5%8A%A0sshkey/"/>
      <url>2021/05/28/git/git%E6%B7%BB%E5%8A%A0sshkey/</url>
      
        <content type="html"><![CDATA[<ul><li>  创建 SSH Key<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;tangxiaomiemail@gmail.com&quot;</span></span><br><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure></li></ul><p>如果一切顺利的话，可以在用户主目录里找到 .ssh 目录，里面有 <code>id_rsa</code> 和 <code>id_rsa.pub</code> 两个文件，这两个就是 SSH Key 的秘钥对，id_rsa 是私钥，不能泄露出去，id_rsa.pub 是公钥，可以放心地告诉任何人.</p><a id="more"></a><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;tangxiaomi&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;tangxiaomiemail@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><h2 id="非全局配置-删除-global"><a href="#非全局配置-删除-global" class="headerlink" title="非全局配置 删除 --global"></a>非全局配置 <code>删除 --global</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config  user.name <span class="string">&quot;tangxiaomi&quot;</span></span><br><span class="line">git config  user.email <span class="string">&quot;tangxiaomiemail@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><h2 id="查看配置"><a href="#查看配置" class="headerlink" title="查看配置"></a>查看配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name</span><br><span class="line">git config --global user.email</span><br></pre></td></tr></table></figure><h2 id="取消全局配置"><a href="#取消全局配置" class="headerlink" title="取消全局配置"></a>取消全局配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> user.name</span><br><span class="line">git config --global --<span class="built_in">unset</span> user.email</span><br><span class="line"></span><br><span class="line">git config --global user.name    <span class="comment">#(查看)全局配置账户是否已经移除</span></span><br><span class="line">git config --global user.email   <span class="comment">#(查看)全局配置邮箱是否已经移除</span></span><br></pre></td></tr></table></figure><p>#git</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3.用递归算法实现，数组长度为5且元素的随机数在2-32间不重复的值</title>
      <link href="2021/05/28/interview/3.%E7%94%A8%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%EF%BC%8C%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E4%B8%BA5%E4%B8%94%E5%85%83%E7%B4%A0%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0%E5%9C%A82-32%E9%97%B4%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E5%80%BC/"/>
      <url>2021/05/28/interview/3.%E7%94%A8%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0%EF%BC%8C%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E4%B8%BA5%E4%B8%94%E5%85%83%E7%B4%A0%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0%E5%9C%A82-32%E9%97%B4%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>这是一道大题目，把考点拆成了4个小项；需要侯选人用递归算法实现（限制15行代码以内实现；限制时间10分钟内完成）： </p><ul><li>生成一个长度为5的空数组 <code>arr</code> 。 </li><li>生成一个（2－32）之间的随机整数 <code>rand</code>。</li><li>把随机数 <code>rand</code> 插入到数组 <code>arr</code> 内，如果数组arr内已存在与 <code>rand</code> 相同的数字，则重新生成随机数<code>rand</code>并插入到<code>arr</code>内[需要使用递归实现，不能使用 <code>for/while</code> 等循环] </li><li>最终输出一个长度为5，且内容不重复的数组 <code>arr</code> 。</li></ul><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">5</span>);</span><br><span class="line"><span class="keyword">const</span> randomNum = <span class="function">() =&gt;</span> (<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">31</span> + <span class="number">2</span>))</span><br><span class="line"><span class="keyword">const</span> randomArr = <span class="function">(<span class="params">n</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n === <span class="number">0</span>) <span class="keyword">return</span> arr;</span><br><span class="line">    <span class="keyword">const</span> num = randomNum();</span><br><span class="line">    <span class="keyword">if</span> (arr.includes(num)) <span class="keyword">return</span> randomArr(n)</span><br><span class="line">    arr[n -<span class="number">1</span>] = num;</span><br><span class="line">    <span class="keyword">return</span> randomArr(n - <span class="number">1</span>)</span><br><span class="line">&#125;;</span><br><span class="line">randomArr(arr.length)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#interview/javascript</p>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> interview </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4.html的元素有哪些（包含H5）？</title>
      <link href="2021/05/28/interview/4.html%E7%9A%84%E5%85%83%E7%B4%A0%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%88%E5%8C%85%E5%90%ABH5%EF%BC%89%EF%BC%9F/"/>
      <url>2021/05/28/interview/4.html%E7%9A%84%E5%85%83%E7%B4%A0%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%88%E5%8C%85%E5%90%ABH5%EF%BC%89%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>区分出行内元素、块级元素、空元素并在后面简要标注下作用</p><a id="more"></a><h2 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h2><ul><li>a</li><li>b</li><li>span</li><li>strong</li><li>i</li><li>em</li><li>button</li><li>input</li><li>label</li><li>br</li><li>textarea</li><li>select</li></ul><h2 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h2><ul><li>div</li><li>p</li><li>h1-h6</li><li>ol</li><li>ul</li><li>li</li><li>table</li><li>tbody</li><li>td</li><li>tr</li><li>thead</li><li>dl</li><li>dt</li><li>dd</li></ul><h2 id="H5新增元素"><a href="#H5新增元素" class="headerlink" title="H5新增元素"></a>H5新增元素</h2><ul><li><code>section</code>  标签定义文档中的节</li><li><code>article </code> 标签的内容独立于文档的其余部分</li><li><code>audio</code> 标签定义声音，比如音乐或其他音频流</li><li><code>video</code> 标签定义视频，比如电影片段或其他视频流</li><li><code>hearder</code> 标签定义文档的页眉（介绍信息）</li><li><code>footer</code> 标签定义文档或节的页脚</li><li><code>small</code> 标签呈现小号字体效果</li><li><code>canvas</code> 定义画布</li></ul><p>#interview/html</p>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> interview </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6.写一个方法去掉字符串中的空格</title>
      <link href="2021/05/28/interview/6.%E5%86%99%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E5%8E%BB%E6%8E%89%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E7%A9%BA%E6%A0%BC/"/>
      <url>2021/05/28/interview/6.%E5%86%99%E4%B8%80%E4%B8%AA%E6%96%B9%E6%B3%95%E5%8E%BB%E6%8E%89%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E7%A9%BA%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>写一个方法去掉字符串中的空格，要求传入不同的类型分别能去掉前、后、前后、中间的空格 </p><a id="more"></a><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">&quot;  s t  r  &quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> POSITION = <span class="built_in">Object</span>.freeze(&#123;</span><br><span class="line">    <span class="attr">left</span>: <span class="built_in">Symbol</span>(),</span><br><span class="line">    <span class="attr">right</span>: <span class="built_in">Symbol</span>(),</span><br><span class="line">    <span class="attr">both</span>: <span class="built_in">Symbol</span>(),</span><br><span class="line">    <span class="attr">center</span>: <span class="built_in">Symbol</span>(),</span><br><span class="line">    <span class="attr">all</span>: <span class="built_in">Symbol</span>()</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">trim</span>(<span class="params">str, position = POSITION.both</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!!POSITION[position]) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;unexpected position value&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (position) &#123;</span><br><span class="line">        <span class="keyword">case</span> POSITION.left:</span><br><span class="line">            str = str.replace(<span class="regexp">/^\s+/</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> POSITION.right:</span><br><span class="line">            str = str.replace(<span class="regexp">/\s+$/</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> POSITION.both:</span><br><span class="line">            str = str.replace(<span class="regexp">/^\s+/</span>, <span class="string">&quot;&quot;</span>).replace(<span class="regexp">/\s+$/</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> POSITION.center:</span><br><span class="line">            <span class="keyword">while</span> (str.match(<span class="regexp">/\w\s+\w/</span>)) &#123;</span><br><span class="line">                str = str.replace(<span class="regexp">/(\w)(\s+)(\w)/</span>, <span class="string">`$1$3`</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> POSITION.all:</span><br><span class="line">            str = str.replace(<span class="regexp">/\s/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = trim(str);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`|<span class="subst">$&#123;result&#125;</span>|`</span>); <span class="comment">//  |s t  r|</span></span><br></pre></td></tr></table></figure><p>#interview/javascript</p>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> interview </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8.在页面上隐藏元素的方法有哪些？</title>
      <link href="2021/05/28/interview/8.%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B8%8A%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E6%96%B9%E6%B3%95%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F/"/>
      <url>2021/05/28/interview/8.%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B8%8A%E9%9A%90%E8%97%8F%E5%85%83%E7%B4%A0%E7%9A%84%E6%96%B9%E6%B3%95%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>在页面上隐藏元素的方法有哪些？ 并简述出第一种方法的应用场景和优劣势</p><a id="more"></a><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><ul><li>占位:</li></ul><p><code>visibility: hidden;</code>  看不见但是会占据空间<br><code>margin-left: -100%;</code><br><code>opacity: 0;</code> 看不见但是会占据空间<br><code>transform: scale(0);</code><br><code>filter: opacity(0);</code></p><ul><li>不占位:</li></ul><p><code>display: none;</code>  页面不会渲染<br><code>width: 0;</code><br><code>height: 0;</code><br><code>overflow: hidden;</code> 页面会渲染但是不显示<br><code>position</code> 配合 <code>z-index</code>; 或者 <code>left/top/bottom/right ： -100%；</code><br><code>transform: scale(0);</code><br><code>translateX(+-100%);</code><br><code>translateY(+-100%);</code><br><code>rotateX(90deg);</code></p><ul><li>仅对块内文本元素:</li></ul><p><code>text-indent: -9999px;</code><br><code>font-size: 0;</code></p><p>#interview/css</p>]]></content>
      
      
      <categories>
          
          <category> interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> interview </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac设置环境变量path的几种方法</title>
      <link href="2021/05/28/other/Mac%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8Fpath%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
      <url>2021/05/28/other/Mac%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8Fpath%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Mac系统的环境变量，加载顺序为：</p><ol><li>系统<ul><li>/etc/profile</li><li>/etc/paths</li></ul></li></ol><p><code>/etc/profile</code> 和 <code>/etc/paths</code> 是系统级别的，系统启动就会加载</p><ol start="2"><li>用户<ul><li>~/.bash_profile </li><li>~/.bash_login </li><li>~/.profile </li><li>~/.bashrc</li></ul></li></ol><p>按照从前往后的顺序读取，如果 <code>~/.bash_profile</code> 文件存在，则后面的几个文件就会被忽略不读了，如果 <code>~/.bash_profile</code> 文件不存在，才会以此类推读取后面的文件。<code>~/.bashrc</code> 没有上述规则，它是 <code>bash shell</code> 打开的时候载入的</p><p>如果没特殊说明,设置PATH的语法都为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$PATH:&lt;PATH 1&gt;:&lt;PATH 2&gt;:&lt;PATH 3&gt;:------:&lt;PATH N&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="全局设置"><a href="#全局设置" class="headerlink" title="全局设置"></a>全局设置</h2><p>下面的几个文件设置是全局的，修改时需要root权限</p><ol><li><p><code>/etc/paths</code> （全局建议修改这个文件 ）<br>编辑 <code>paths</code>，将环境变量添加到 <code>paths</code> 文件中 ，一行一个路径<br>Hint：输入环境变量时，不用一个一个地输入，只要拖动文件夹到 Terminal 里就可以了。</p></li><li><p><code>/etc/profile</code> （建议不修改这个文件 ）<br>全局（公有）配置，不管是哪个用户，登录时都会读取该文件。</p></li><li><p><code>/etc/bashrc</code> （一般在这个文件中添加系统级环境变量）<br>全局（公有）配置，<code>bash shell</code> 执行时，不管是何种方式，都会读取此文件。</p></li><li></li></ol><ul><li>创建一个文件：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo touch /etc/paths.d/mysql</span><br></pre></td></tr></table></figure></li><li>用 vim 打开这个文件（如果是以 <code>open -t</code> 的方式打开，则不允许编辑）：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/paths.d/mysql</span><br></pre></td></tr></table></figure></li><li>编辑该文件，键入路径并保存（关闭该 <code>Terminal</code> 窗口并重新打开一个，就能使用 mysql 命令了）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/mysql/bin</span><br></pre></td></tr></table></figure>据说，这样可以自己生成新的文件，不用把变量全都放到 <code>paths</code> 一个文件里，方便管理。</li></ul><h2 id="单个用户设置"><a href="#单个用户设置" class="headerlink" title="单个用户设置"></a>单个用户设置</h2><ol><li><code>~/.bash_profile</code> （任意一个文件中添加用户级环境变量）<br>（注：Linux 里面是 <code>.bashrc</code> 而 Mac 是 <code>.bash_profile</code>）<br>若bash shell是以login方式执行时，才会读取此文件。该文件仅仅执行一次!默认情况下,他设置一些环境变量<br>设置命令别名<code>alias ll=’ls -la’</code></li></ol><p>设置环境变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/opt/local/bin:/opt/local/sbin:$PATH</span><br></pre></td></tr></table></figure><ol start="2"><li><code>~/.bashrc</code> 同上</li></ol><p>如果想立刻生效，则可执行下面的语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ source 相应的文件</span><br></pre></td></tr></table></figure><p>一般环境变量更改后，重启后生效。</p><p>#other</p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
