{"total":64,"pageSize":10,"pageCount":7,"data":[{"title":" SVN与Git比较的优缺点差异","slug":"git/91c8e247e4","date":"2019-10-14T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/git/91c8e247e4.json","excerpt":"<p><a href=\"https://www.cnblogs.com/Sungeek/p/9152223.html\">SVN与Git比较的优缺点差异</a></p>\n<h2 id=\"一、-集中式vs分布式\"><a href=\"#一、-集中式vs分布式\" class=\"headerlink\" title=\"一、 集中式vs分布式\"></a>一、 集中式vs分布式</h2><h3 id=\"1-Subversion属于集中式的版本控制系统\"><a href=\"#1-Subversion属于集中式的版本控制系统\" class=\"headerlink\" title=\"1. Subversion属于集中式的版本控制系统\"></a>1. Subversion属于集中式的版本控制系统</h3><p>集中式的版本控制系统都有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。<br> <img src=\"/images/aHR0cHM6Ly9pbWFnZXMyMDE4LmNuYmxvZ3MuY29tL2Jsb2cvODcyNjEwLzIwMTgwNi84NzI2MTAtMjAxODA2MDgxNDU5NDY3ODktMTE3NjM5NjE1Mi5wbmc.png\"></p>","keywords":null,"cover":"/images/aHR0cHM6Ly9pbWFnZXMyMDE4LmNuYmxvZ3MuY29tL2Jsb2cvODcyNjEwLzIwMTgwNi84NzI2MTAtMjAxODA2MDgxNDU5NDY3ODktMTE3NjM5NjE1Mi5wbmc.png","content":null,"text":"SVN与Git比较的优缺点差异一、 集中式vs分布式1. Subversion属于集中式的版本控制系统集中式的版本控制系统都有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。<br>  [Figure] ","link":"","raw":null,"photos":[],"categories":[{"name":"git","slug":"git","count":6,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":6,"path":"api/tags/git.json"}]},{"title":" TypeScript","slug":"typescript/0adbf3a0c2","date":"2019-09-09T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/typescript/0adbf3a0c2.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li>手册<ul>\n<li>[[基础类型]]</li>\n<li>[[接口]]</li>\n<li>[[函数]]</li>\n<li>[[字面量类型]]</li>\n<li>[[类]]</li>\n<li>[[枚举]]</li>\n<li>[[泛型]]</li>\n</ul>\n</li>\n<li><a href=\"zh/reference/README.md\">手册（进阶）</a><ul>\n<li><a href=\"zh/reference/advanced-types.md\">高级类型</a></li>\n<li><a href=\"zh/reference/utility-types.md\">实用工具类型</a></li>\n<li><a href=\"zh/reference/decorators.md\">Decorators</a></li>\n<li><a href=\"zh/reference/declaration-merging.md\">声明合并</a></li>\n<li><a href=\"zh/reference/iterators-and-generators.md\">Iterators 和 Generators</a></li>\n<li><a href=\"zh/reference/jsx.md\">JSX</a></li>\n<li><a href=\"zh/reference/mixins.md\">混入</a></li>\n<li><a href=\"zh/reference/modules.md\">模块</a></li>\n<li><a href=\"zh/reference/module-resolution.md\">模块解析</a></li>\n<li><a href=\"zh/reference/namespaces.md\">命名空间</a></li>\n<li><a href=\"zh/reference/namespaces-and-modules.md\">命名空间和模块</a></li>\n<li><a href=\"zh/reference/symbols.md\">Symbols</a></li>\n<li><a href=\"zh/reference/triple-slash-directives.md\">三斜线指令</a></li>\n<li><a href=\"zh/reference/type-compatibility.md\">类型兼容性</a></li>\n<li><a href=\"zh/reference/type-inference.md\">类型推论</a></li>\n<li><a href=\"zh/reference/variable-declarations.md\">变量声明</a></li>\n</ul>\n</li>\n<li>手册（v2）<ul>\n<li><a href=\"zh/handbook-v2/type-manipulation/template-literal-types.md\">模版字面量类型</a></li>\n</ul>\n</li>\n<li><a href=\"zh/declaration-files/README.md\">如何书写声明文件</a><ul>\n<li><a href=\"zh/declaration-files/introduction.md\">介绍</a></li>\n<li><a href=\"zh/declaration-files/by-example.md\">举例</a></li>\n<li><a href=\"zh/declaration-files/library-structures.md\">库结构</a></li>\n<li><a href=\"zh/declaration-files/templates.md\">模板</a></li>\n<li><a href=\"zh/declaration-files/do-s-and-don-ts.md\">最佳实践</a></li>\n<li><a href=\"zh/declaration-files/deep-dive.md\">深入</a></li>\n<li><a href=\"zh/declaration-files/publishing.md\">发布</a></li>\n<li><a href=\"zh/declaration-files/consumption.md\">使用</a></li>\n</ul>\n</li>\n<li>JavaScript<ul>\n<li><a href=\"zh/javascript/type-checking-javascript-files.md\">JavaScript文件里的类型检查</a></li>\n</ul>\n</li>\n<li><a href=\"zh/project-config/README.md\">工程配置</a><ul>\n<li><a href=\"zh/project-config/tsconfig.json.md\">tsconfig.json</a></li>\n<li><a href=\"zh/project-config/project-references.md\">工程引用</a></li>\n<li><a href=\"zh/project-config/typings-for-npm-packages.md\">NPM包的类型</a></li>\n<li><a href=\"zh/project-config/compiler-options.md\">编译选项</a></li>\n<li><a href=\"zh/project-config/configuring-watch.md\">配置 Watch</a></li>\n<li><a href=\"zh/project-config/compiler-options-in-msbuild.md\">在MSBuild里使用编译选项</a></li>\n<li><a href=\"zh/project-config/integrating-with-build-tools.md\">与其它构建工具整合</a></li>\n<li><a href=\"zh/project-config/nightly-builds.md\">使用TypeScript的每日构建版本</a></li>\n</ul>\n</li>\n<li><a href=\"zh/wiki/README.md\">Wiki</a><ul>\n<li><a href=\"zh/wiki/this-in-typescript.md\">TypeScript里的this</a></li>\n<li><a href=\"zh/wiki/coding_guidelines.md\">编码规范</a></li>\n<li><a href=\"zh/wiki/common-errors.md\">常见编译错误</a></li>\n<li><a href=\"zh/wiki/typescript-editor-support.md\">支持TypeScript的编辑器</a></li>\n<li><a href=\"zh/wiki/using-typescript-with-asp.net-5.md\">结合ASP.NET v5使用TypeScript</a></li>\n<li><a href=\"zh/wiki/architectural-overview.md\">架构概述</a></li>\n<li><a href=\"zh/wiki/roadmap.md\">发展路线图</a></li>\n</ul>\n</li>\n</ul>\n","text":"目录手册[[基础类型]][[接口]][[函数]][[字面量类型]][[类]][[枚举]][[泛型]]手册（进阶）高级类型实用工具类型Decorators声明合并Iterators 和 GeneratorsJSX混入模块模块解析命名空间命名空间和模块Symbols三斜线指令类型兼容","link":"","raw":null,"photos":[],"categories":[{"name":"typescript","slug":"typescript","count":8,"path":"api/categories/typescript.json"}],"tags":[{"name":"typescript","slug":"typescript","count":8,"path":"api/tags/typescript.json"}]},{"title":" JavaScript 的静态作用域链与“动态”闭包链","slug":"javascript/8bd3b1ab2f","date":"2019-09-03T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/javascript/8bd3b1ab2f.json","excerpt":"<p>读完本文会解答你以下疑问：</p>\n<ul>\n<li>静态作用域链和动态作用域链的区别</li>\n<li>为什么会有闭包</li>\n<li>闭包什么时候创建的</li>\n<li>[[scopes]] 属性是什么</li>\n<li>闭包保存什么内容</li>\n<li>闭包存储在哪</li>\n<li>为什么 eval 性能不好</li>\n<li>eval 什么情况下会创建闭包</li>\n</ul>\n<p>在 JavaScript 里面，函数、块、模块都可以形成作用域（一个存放变量的独立空间），他们之间可以相互嵌套，作用域之间会形成引用关系，这条链叫做作用域链。</p>\n<p>作用域链具体是什么样呢？</p>","keywords":null,"cover":"/images/72f12fc7e7164cc0af23f3e16f03bb06~tplv-k3u1fbpfcp-watermark.image.png","content":null,"text":"读完本文会解答你以下疑问：静态作用域链和动态作用域链的区别为什么会有闭包闭包什么时候创建的[[scopes]] 属性是什么闭包保存什么内容闭包存储在哪为什么 eval 性能不好eval 什么情况下会创建闭包在 JavaScript 里面，函数、块、模块都可以形成作用域（一个存放变","link":"","raw":null,"photos":[],"categories":[{"name":"javascript","slug":"javascript","count":21,"path":"api/categories/javascript.json"}],"tags":[{"name":"javascript","slug":"javascript","count":25,"path":"api/tags/javascript.json"},{"name":"closure","slug":"closure","count":1,"path":"api/tags/closure.json"}]},{"title":" Windows下如何查看某个端口被谁占用","slug":"Windows/0748fd3045","date":"2019-08-09T00:00:00.000Z","updated":"2021-06-17T11:25:09.043Z","comments":true,"path":"api/articles/Windows/0748fd3045.json","excerpt":"","keywords":null,"cover":null,"content":"<p>开始—-&gt;运行—-&gt; <code>cmd</code> ，或者是 <code>window+R</code> 组合键，调出命令窗口。</p>\n<h2 id=\"查找所有运行的端口\"><a href=\"#查找所有运行的端口\" class=\"headerlink\" title=\"查找所有运行的端口\"></a>查找所有运行的端口</h2><pre><code class=\"hljs shell\">netstat -ano</code></pre>\n\n<h2 id=\"查看被占用端口对应的-PID\"><a href=\"#查看被占用端口对应的-PID\" class=\"headerlink\" title=\"查看被占用端口对应的 PID\"></a>查看被占用端口对应的 PID</h2><pre><code class=\"hljs shell\">netstat -aon|findstr &quot;8081&quot;</code></pre>\n\n<h2 id=\"查看指定-PID-的进程\"><a href=\"#查看指定-PID-的进程\" class=\"headerlink\" title=\"查看指定 PID 的进程\"></a>查看指定 PID 的进程</h2><pre><code class=\"hljs shell\">tasklist|findstr &quot;9088&quot;</code></pre>\n\n<h2 id=\"结束进程\"><a href=\"#结束进程\" class=\"headerlink\" title=\"结束进程\"></a>结束进程</h2><p>强制（/F参数）杀死 pid 为 9088 的所有进程包括子进程（/T参数）：</p>\n<pre><code class=\"hljs shell\">taskkill /T /F /PID 9088</code></pre>\n\n","text":"开始—-&gt;运行—-&gt; cmd ，或者是 window+R 组合键，调出命令窗口。查找所有运行的端口netstat -ano查看被占用端口对应的 PIDnetstat -aon|findstr &quot;8081&quot;查看指定 PID 的进程tasklist|f","link":"","raw":null,"photos":[],"categories":[{"name":"Windows","slug":"Windows","count":1,"path":"api/categories/Windows.json"}],"tags":[{"name":"Windows","slug":"Windows","count":1,"path":"api/tags/Windows.json"}]},{"title":" css 中的 bfc（Block Formatting Contexts）","slug":"css/496c418247","date":"2019-07-17T00:00:00.000Z","updated":"2021-06-17T11:25:09.043Z","comments":true,"path":"api/articles/css/496c418247.json","excerpt":"<h2 id=\"常见定位方案\"><a href=\"#常见定位方案\" class=\"headerlink\" title=\"常见定位方案\"></a>常见定位方案</h2><p>在讲 BFC 之前，我们先来了解一下常见的定位方案，定位方案是控制元素的布局，有三种常见方案:</p>\n<ul>\n<li>普通流 (normal flow)</li>\n</ul>\n<blockquote>\n<p>在普通流中，元素按照其在 HTML 中的先后位置至上而下布局，在这个过程中，行内元素水平排列，直到当行被占满然后换行，块级元素则会被渲染为完整的一个新行，除非另外指定，否则所有元素默认都是普通流定位，也可以说，普通流中元素的位置由该元素在 HTML 文档中的位置决定。    </p>\n</blockquote>","keywords":null,"cover":null,"content":null,"text":"常见定位方案在讲 BFC 之前，我们先来了解一下常见的定位方案，定位方案是控制元素的布局，有三种常见方案:普通流 (normal flow)在普通流中，元素按照其在 HTML 中的先后位置至上而下布局，在这个过程中，行内元素水平排列，直到当行被占满然后换行，块级元素则会被渲染为完","link":"","raw":null,"photos":[],"categories":[{"name":"css","slug":"css","count":3,"path":"api/categories/css.json"}],"tags":[{"name":"css","slug":"css","count":3,"path":"api/tags/css.json"}]},{"title":" Flex 布局教程：实例篇","slug":"css/b875b59ff6","date":"2019-07-03T00:00:00.000Z","updated":"2021-06-17T11:25:09.043Z","comments":true,"path":"api/articles/css/b875b59ff6.json","excerpt":"<p>[[Flex 布局教程：语法篇]] 介绍了Flex布局的语法，今天介绍常见布局的Flex写法。</p>\n<p>你会看到，不管是什么布局，Flex往往都可以几行命令搞定。</p>\n<p><img src=\"/images/bg2015071327.png\"><br>我只列出代码，详细的语法解释请查阅 [[Flex 布局教程：语法篇]]。我的主要参考资料是 <a href=\"http://davidwalsh.name/flexbox-dice\">Landon Schropp</a> 的文章和 <a href=\"http://philipwalton.github.io/solved-by-flexbox/\">Solved by Flexbox</a> 。</p>","keywords":null,"cover":"/images/bg2015071327.png","content":null,"text":"[[Flex 布局教程：语法篇]] 介绍了Flex布局的语法，今天介绍常见布局的Flex写法。你会看到，不管是什么布局，Flex往往都可以几行命令搞定。 [Figure] CSS的写法。.parent &#123;  width: 200px;  height: 150px;  ","link":"","raw":null,"photos":[],"categories":[{"name":"css","slug":"css","count":3,"path":"api/categories/css.json"}],"tags":[{"name":"css","slug":"css","count":3,"path":"api/tags/css.json"}]},{"title":" 8. 在页面上隐藏元素的方法有哪些？","slug":"interview/f4d551d5c3","date":"2019-07-03T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/interview/f4d551d5c3.json","excerpt":"<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h2><p>在页面上隐藏元素的方法有哪些？ 并简述出第一种方法的应用场景和优劣势</p>","keywords":null,"cover":null,"content":null,"text":"描述在页面上隐藏元素的方法有哪些？ 并简述出第一种方法的应用场景和优劣势解答占位:visibility: hidden;  看不见但是会占据空间<br>margin-left: -100%;<br>opacity: 0; 看不见但是会占据空间<br>transform: scal","link":"","raw":null,"photos":[],"categories":[{"name":"interview","slug":"interview","count":9,"path":"api/categories/interview.json"}],"tags":[{"name":"interview","slug":"interview","count":9,"path":"api/tags/interview.json"},{"name":"everyday","slug":"everyday","count":7,"path":"api/tags/everyday.json"}]},{"title":" Airbnb JavaScript Style Guide","slug":"javascript/54108de862","date":"2019-07-03T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/javascript/54108de862.json","excerpt":"<h2 id=\"Types\"><a href=\"#Types\" class=\"headerlink\" title=\"Types\"></a>Types</h2><p><strong>1.1</strong> ::Primitives::: When you access a primitive type you work directly on its value.</p>\n<pre><code>* `string`\n* `number`\n* `boolean`\n* `null`\n* `undefined`\n* `symbol`\n* `bigint`\n</code></pre>\n<pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> foo = <span class=\"hljs-number\">1</span>;\n<span class=\"hljs-keyword\">let</span> bar = foo;\n\nbar = <span class=\"hljs-number\">9</span>;\n<span class=\"hljs-built_in\">console</span>.log(foo, bar); <span class=\"hljs-comment\">// =&gt; 1, 9</span></code></pre>\n\n<pre><code>* Symbols and BigInts cannot be faithfully polyfilled, so they should not be used when targeting browsers/environments that don’t support them natively.\n</code></pre>","keywords":null,"cover":null,"content":null,"text":"Types1.1 ::Primitives::: When you access a primitive type you work directly on its value.* `string`* `number`* `boolean`* `null`* `undefined","link":"","raw":null,"photos":[],"categories":[{"name":"javascript","slug":"javascript","count":21,"path":"api/categories/javascript.json"}],"tags":[{"name":"javascript","slug":"javascript","count":25,"path":"api/tags/javascript.json"}]},{"title":" JavaScript 实现复制粘贴","slug":"javascript/54c2aafa7a","date":"2019-06-25T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/javascript/54c2aafa7a.json","excerpt":"<h2 id=\"实现思路\"><a href=\"#实现思路\" class=\"headerlink\" title=\"实现思路\"></a>实现思路</h2><h2 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html:\"></a>html:</h2><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\">&quot;copyToClip(&#x27;内容&#x27;)&quot;</span>&gt;</span>Copy<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></code></pre>\n\n<h2 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript:\"></a>javascript:</h2><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">/**</span>\n<span class=\"hljs-comment\"> * 复制内容到粘贴板</span>\n<span class=\"hljs-comment\"> * content : 需要复制的内容</span>\n<span class=\"hljs-comment\"> * message : 复制完后的提示，不传则默认提示&quot;复制成功&quot;</span>\n<span class=\"hljs-comment\"> */</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">copyToClip</span>(<span class=\"hljs-params\">content, message</span>) </span>&#123;\n    <span class=\"hljs-keyword\">var</span> aux = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">&#x27;input&#x27;</span>)\n    aux.setAttribute(<span class=\"hljs-string\">&#x27;value&#x27;</span>, content)\n    <span class=\"hljs-built_in\">document</span>.body.appendChild(aux)\n    aux.select()\n    <span class=\"hljs-built_in\">document</span>.execCommand(<span class=\"hljs-string\">&#x27;copy&#x27;</span>)\n    <span class=\"hljs-built_in\">document</span>.body.removeChild(aux)\n    <span class=\"hljs-keyword\">if</span> (message == <span class=\"hljs-literal\">null</span>) &#123;\n        alert(<span class=\"hljs-string\">&#x27;复制成功&#x27;</span>)\n    &#125; <span class=\"hljs-keyword\">else</span> &#123;\n        alert(mesage)\n    &#125;\n&#125;</code></pre>","keywords":null,"cover":null,"content":null,"text":"实现思路html:&lt;button onclick=&quot;copyToClip(&#x27;内容&#x27;)&quot;&gt;Copy&lt;/button&gt;javascript:/** * 复制内容到粘贴板 * content : 需要复制的内容 * mes","link":"","raw":null,"photos":[],"categories":[{"name":"javascript","slug":"javascript","count":21,"path":"api/categories/javascript.json"}],"tags":[{"name":"javascript","slug":"javascript","count":25,"path":"api/tags/javascript.json"}]},{"title":" element-ui tabs的label slot不能及时动态更新","slug":"vue/017ad82dfe","date":"2019-06-09T00:00:00.000Z","updated":"2021-06-17T11:25:09.051Z","comments":true,"path":"api/articles/vue/017ad82dfe.json","excerpt":"","keywords":null,"cover":null,"content":"<p><a href=\"https://github.com/ElemeFE/element/issues/2934\">https://github.com/ElemeFE/element/issues/2934</a></p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">var</span> Main = &#123;\n    <span class=\"hljs-attr\">template</span>: <span class=\"hljs-string\">`</span>\n<span class=\"hljs-string\">&lt;el-tabs type=&quot;border-card&quot;&gt;</span>\n<span class=\"hljs-string\"> &lt;el-tab-pane :name=&quot;index&quot; v-for=&quot;(item, index) in tabs&quot;&gt;</span>\n<span class=\"hljs-string\">     &lt;span slot=&quot;label&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;/span&gt;</span>\n<span class=\"hljs-string\">     &lt;div&gt;</span>\n<span class=\"hljs-string\">         &#123;&#123; item.name &#125;&#125;</span>\n<span class=\"hljs-string\">      &lt;input type=&quot;text&quot; v-model=&quot;item.name&quot; name=&quot;name&quot;/&gt;</span>\n<span class=\"hljs-string\">     &lt;/div&gt;</span>\n<span class=\"hljs-string\">  &lt;/el-tab-pane&gt;</span>\n<span class=\"hljs-string\">&lt;/el-tabs&gt;</span>\n<span class=\"hljs-string\">  `</span>,\n    <span class=\"hljs-function\"><span class=\"hljs-title\">data</span>(<span class=\"hljs-params\"></span>)</span> &#123;\n        <span class=\"hljs-keyword\">return</span> &#123;\n            <span class=\"hljs-attr\">tabs</span>: [\n                &#123;\n                    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;tab1&#x27;</span>,\n                    <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&#x27;Content Tab1&#x27;</span>,\n                &#125;,\n                &#123;\n                    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;tab2&#x27;</span>,\n                    <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&#x27;Content Tab2&#x27;</span>,\n                &#125;,\n                &#123;\n                    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;tab3&#x27;</span>,\n                    <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&#x27;Content Tab3&#x27;</span>,\n                &#125;,\n            ],\n        &#125;\n    &#125;,\n&#125;\n\n<span class=\"hljs-keyword\">new</span> Vue(&#123;\n    <span class=\"hljs-attr\">el</span>: <span class=\"hljs-string\">&#x27;#app&#x27;</span>,\n    <span class=\"hljs-attr\">render</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">h</span>) =&gt;</span> h(Main)\n&#125;)\n</code></pre>\n\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><pre><code class=\"hljs vim\"><span class=\"hljs-symbol\">&lt;el-tabs&gt;</span>, like &lt;<span class=\"hljs-keyword\">el</span>-<span class=\"hljs-keyword\">tabs</span> ref=<span class=\"hljs-string\">&quot;tabs&quot;</span>&gt;</code></pre>\n\n<pre><code class=\"hljs scss\">this.<span class=\"hljs-variable\">$refs</span><span class=\"hljs-selector-class\">.tabs</span>.<span class=\"hljs-variable\">$refs</span><span class=\"hljs-selector-class\">.nav</span>.<span class=\"hljs-variable\">$forceUpdate</span>();</code></pre>\n\n","text":"https://github.com/ElemeFE/element/issues/2934问题var Main = &#123;    template: `&lt;el-tabs type=&quot;border-card&quot;&gt; &lt;el-tab-pane","link":"","raw":null,"photos":[],"categories":[{"name":"vue","slug":"vue","count":2,"path":"api/categories/vue.json"}],"tags":[{"name":"javascript","slug":"javascript","count":25,"path":"api/tags/javascript.json"},{"name":"question","slug":"question","count":2,"path":"api/tags/question.json"},{"name":"vue","slug":"vue","count":2,"path":"api/tags/vue.json"}]}]}