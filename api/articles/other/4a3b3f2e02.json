{"sort":13,"title":" Mac 设置环境变量 path 的几种方法","slug":"other/4a3b3f2e02","date":"2019-06-03T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/other/4a3b3f2e02.json","photos":[],"link":"","excerpt":"Mac系统的环境变量，加载顺序为：系统/etc/profile/etc/paths/etc/profile 和 /etc/paths 是系统级别的，系统启动就会加载用户~/.bash_profile ~/.bash_login ~/.profile ~/.bashrc按照从前往后的顺序读取，如果 ~/.bash_profile 文件存在，则后面的几个文件就会被忽略不读了，如果 ~/.bash_profile 文件不存在，才会以此类推读取后面的文件。~/.bashrc 没有上述规则，它是 bash shell 打开的时候载入的如果没特殊说明,设置PATH的语法都为：export PATH=$PATH:&lt;PATH 1&gt;:&lt;PATH 2&gt;:&lt;PATH 3&gt;:------:&lt;PATH N&gt;","covers":null,"content":"<p>Mac系统的环境变量，加载顺序为：</p>\n<ol>\n<li>系统<ul>\n<li>/etc/profile</li>\n<li>/etc/paths</li>\n</ul>\n</li>\n</ol>\n<p><code>/etc/profile</code> 和 <code>/etc/paths</code> 是系统级别的，系统启动就会加载</p>\n<ol start=\"2\">\n<li>用户<ul>\n<li>~/.bash_profile </li>\n<li>~/.bash_login </li>\n<li>~/.profile </li>\n<li>~/.bashrc</li>\n</ul>\n</li>\n</ol>\n<p>按照从前往后的顺序读取，如果 <code>~/.bash_profile</code> 文件存在，则后面的几个文件就会被忽略不读了，如果 <code>~/.bash_profile</code> 文件不存在，才会以此类推读取后面的文件。<code>~/.bashrc</code> 没有上述规则，它是 <code>bash shell</code> 打开的时候载入的</p>\n<p>如果没特殊说明,设置PATH的语法都为：</p>\n<pre><code class=\"hljs elixir\">export PATH=<span class=\"hljs-variable\">$PATH</span><span class=\"hljs-symbol\">:&lt;PATH</span> <span class=\"hljs-number\">1</span>&gt;<span class=\"hljs-symbol\">:&lt;PATH</span> <span class=\"hljs-number\">2</span>&gt;<span class=\"hljs-symbol\">:&lt;PATH</span> <span class=\"hljs-number\">3</span>&gt;<span class=\"hljs-symbol\">:------</span><span class=\"hljs-symbol\">:&lt;PATH</span> N&gt;</code></pre>\n<a id=\"more\"></a>\n<h2 id=\"全局设置\"><a href=\"#全局设置\" class=\"headerlink\" title=\"全局设置\"></a>全局设置</h2><p>下面的几个文件设置是全局的，修改时需要root权限</p>\n<ol>\n<li><p><code>/etc/paths</code> （全局建议修改这个文件 ）<br>编辑 <code>paths</code>，将环境变量添加到 <code>paths</code> 文件中 ，一行一个路径<br>Hint：输入环境变量时，不用一个一个地输入，只要拖动文件夹到 Terminal 里就可以了。</p>\n</li>\n<li><p><code>/etc/profile</code> （建议不修改这个文件 ）<br>全局（公有）配置，不管是哪个用户，登录时都会读取该文件。</p>\n</li>\n<li><p><code>/etc/bashrc</code> （一般在这个文件中添加系统级环境变量）<br>全局（公有）配置，<code>bash shell</code> 执行时，不管是何种方式，都会读取此文件。</p>\n</li>\n<li></li>\n</ol>\n<ul>\n<li>创建一个文件：<pre><code class=\"hljs awk\">sudo touch <span class=\"hljs-regexp\">/etc/</span>paths.d/mysql</code></pre></li>\n<li>用 vim 打开这个文件（如果是以 <code>open -t</code> 的方式打开，则不允许编辑）：<pre><code class=\"hljs awk\">sudo vim <span class=\"hljs-regexp\">/etc/</span>paths.d/mysql</code></pre></li>\n<li>编辑该文件，键入路径并保存（关闭该 <code>Terminal</code> 窗口并重新打开一个，就能使用 mysql 命令了）<pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">/usr/</span>local<span class=\"hljs-regexp\">/mysql/</span>bin</code></pre>\n据说，这样可以自己生成新的文件，不用把变量全都放到 <code>paths</code> 一个文件里，方便管理。</li>\n</ul>\n<h2 id=\"单个用户设置\"><a href=\"#单个用户设置\" class=\"headerlink\" title=\"单个用户设置\"></a>单个用户设置</h2><ol>\n<li><code>~/.bash_profile</code> （任意一个文件中添加用户级环境变量）<br>（注：Linux 里面是 <code>.bashrc</code> 而 Mac 是 <code>.bash_profile</code>）<br>若bash shell是以login方式执行时，才会读取此文件。该文件仅仅执行一次!默认情况下,他设置一些环境变量<br>设置命令别名<code>alias ll=’ls -la’</code></li>\n</ol>\n<p>设置环境变量：</p>\n<pre><code class=\"hljs awk\">export PATH=<span class=\"hljs-regexp\">/opt/</span>local<span class=\"hljs-regexp\">/bin:/</span>opt<span class=\"hljs-regexp\">/local/</span>sbin:<span class=\"hljs-variable\">$PATH</span></code></pre>\n\n<ol start=\"2\">\n<li><code>~/.bashrc</code> 同上</li>\n</ol>\n<p>如果想立刻生效，则可执行下面的语句：</p>\n<pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> <span class=\"hljs-built_in\">source</span> 相应的文件</span></code></pre>\n\n<p>一般环境变量更改后，重启后生效。</p>\n","prev":{"title":" Object.assign 是浅拷贝还是深拷贝？实现深拷贝的方法有哪些？","slug":"javascript/f81ce9141d"},"next":{"title":" 占位图","slug":"other/5051f46252"},"categories":[{"name":"other","slug":"other","count":4,"path":"api/categories/other.json"}],"tags":[{"name":"other","slug":"other","count":4,"path":"api/tags/other.json"}]}