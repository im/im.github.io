{"sort":11,"title":" git rebase -i","slug":"git/516fccc759","date":"2019-05-12T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/git/516fccc759.json","photos":[],"link":"","excerpt":"变基时有六个命令可用：pick<br>pick只是意味着包括提交。重新进行命令时，重新安排pick命令的顺序会更改提交的顺序。如果选择不包括提交，则应删除整行。reword<br>该reword命令与相似pick，但是使用后，重新设置过程将暂停并为您提供更改提交消息的机会。提交所做的任何更改均不受影响。edit<br>如果您选择edit提交，则将有机会修改提交，这意味着您可以完全添加或更改提交。您还可以进行更多提交，然后再继续进行变基。这使您可以将大型提交拆分为较小的提交，或者删除在提交中所做的错误更改。squash<br>该命令使您可以将两个或多个提交合并为一个提交。提交被压缩到其上方的提交中。Git使您有机会编写描述这两个更改的新提交消息。fixup<br>这类似于squash，但是要合并的提交已丢弃其消息。提交仅合并到其上方的提交中，并且较早提交的消息用于描述这两个更改。exec<br>这使您可以对提交运行任意的Shell命令。","covers":["/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA4MTkzNTQxLTQzOTMucG5n.png","/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA0MTA0MTMwLTY1NjExOS5wbmc.png","/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA0MTA0MzE2LTc3MzYwMC5wbmc.png","/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA0MTA1OTEzLTE2Mzk3Ny5wbmc.png","/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA4MTkzODEzLTE4OTI4My5wbmc.png","/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA0MTEzMDU2LTczMjkzMS5wbmc.png","/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA0MTIzODIyLTY3NTQyMy5wbmc.png","/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA0MTI0NjU3LTUwMDk0MC5wbmc.png"],"content":"<h2 id=\"变基时有六个命令可用：\"><a href=\"#变基时有六个命令可用：\" class=\"headerlink\" title=\"变基时有六个命令可用：\"></a>变基时有六个命令可用：</h2><ul>\n<li><p>pick<br>pick只是意味着包括提交。重新进行命令时，重新安排pick命令的顺序会更改提交的顺序。如果选择不包括提交，则应删除整行。</p>\n</li>\n<li><p>reword<br>该reword命令与相似pick，但是使用后，重新设置过程将暂停并为您提供更改提交消息的机会。提交所做的任何更改均不受影响。</p>\n</li>\n<li><p>edit<br>如果您选择edit提交，则将有机会修改提交，这意味着您可以完全添加或更改提交。您还可以进行更多提交，然后再继续进行变基。这使您可以将大型提交拆分为较小的提交，或者删除在提交中所做的错误更改。</p>\n</li>\n<li><p>squash<br>该命令使您可以将两个或多个提交合并为一个提交。提交被压缩到其上方的提交中。Git使您有机会编写描述这两个更改的新提交消息。</p>\n</li>\n<li><p>fixup<br>这类似于squash，但是要合并的提交已丢弃其消息。提交仅合并到其上方的提交中，并且较早提交的消息用于描述这两个更改。</p>\n</li>\n<li><p>exec<br>这使您可以对提交运行任意的Shell命令。</p>\n</li>\n</ul>\n<a id=\"more\"></a>\n\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 我们初始化一个项目</span>\ngit init\n\n<span class=\"hljs-comment\"># 制造一些提交</span>\ntouch base.txt\ngit add .\ngit commit -m <span class=\"hljs-string\">&quot;add base&quot;</span>\n\ntouch 1.txt\ngit add .\ngit commit -m <span class=\"hljs-string\">&quot;add 1&quot;</span>\n\ntouch 2.txt\ngit add .\ngit commit -m <span class=\"hljs-string\">&quot;add 2&quot;</span>\n\ntouch 3.txt\ngit add .\ngit commit -m <span class=\"hljs-string\">&quot;add 3&quot;</span>\n\ntouch 4.txt\ngit add .\ngit commit -m <span class=\"hljs-string\">&quot;add 4&quot;</span>\n\ntouch 5.txt\ngit add .\ngit commit -m <span class=\"hljs-string\">&quot;add 5&quot;</span>\n\n\n<span class=\"hljs-comment\">## 查看现在的提交</span>\ngit <span class=\"hljs-built_in\">log</span>\ncommit a75ed742838ebc1ef1073502623478f73e1ec21f\nAuthor: \nDate:   Wed Mar 4 10:02:51 2020 +0800\n\n    add 5\n\ncommit 8b485bb4768b2abf8f6400dcba069f1a650ed5ec\nAuthor: \nDate:   Wed Mar 4 09:59:27 2020 +0800\n\n    add 4\n\ncommit 63ce9fb010da550c668aca66758c45fbfad46e2b\nAuthor:\nDate:   Wed Mar 4 09:59:04 2020 +0800\n\n    add 3\n\ncommit 9cd34c4d42f52cfb40026dae613c8ad29d7cbc66\nAuthor: \nDate:   Wed Mar 4 09:58:45 2020 +0800\n\n    add 2\n\ncommit 77bd0eb1a97e1676367ea236c1c47c155eaa8430\nAuthor: \nDate:   Wed Mar 4 09:58:23 2020 +0800\n\n    add 1</code></pre>\n\n<p>现在我们已经有了一些，提交了，接下来开始练习</p>\n<h2 id=\"pick-更改提交顺序、删除提交\"><a href=\"#pick-更改提交顺序、删除提交\" class=\"headerlink\" title=\"pick 更改提交顺序、删除提交\"></a>pick 更改提交顺序、删除提交</h2><p>pick只是意味着包括提交。重新进行命令时，重新安排pick`命令的顺序会更改提交的顺序。如果选择不包括提交，则应删除整行。</p>\n<p>::假定，我们现在要改变提交 5.txt 和 4.txt 的顺序，该怎么操作::</p>\n<p>更改涉及到了两次提交，最早提交次数为2（4.txt是倒数第二次提交）</p>\n<ol>\n<li>告诉git 我要改变倒数第2次后的提交</li>\n</ol>\n<pre><code class=\"hljs bash\">git rebase -i HEAD~2</code></pre>\n\n<p><strong>接着，git给你一个文本，告诉你我知道了，你说的这些可以有以下操作</strong></p>\n<p>下面是执行命令后的样子</p>\n<pre><code class=\"hljs bash\">pick 8b485bb add 4\npick a75ed74 add 5\n\n<span class=\"hljs-comment\"># Rebase 63ce9fb..a75ed74 onto 63ce9fb (2 command(s))</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Commands:</span>\n<span class=\"hljs-comment\"># p, pick = use commit</span>\n<span class=\"hljs-comment\"># r, reword = use commit, but edit the commit message</span>\n<span class=\"hljs-comment\"># e, edit = use commit, but stop for amending</span>\n<span class=\"hljs-comment\"># s, squash = use commit, but meld into previous commit</span>\n<span class=\"hljs-comment\"># f, fixup = like &quot;squash&quot;, but discard this commit&#x27;s log message</span>\n<span class=\"hljs-comment\"># x, exec = run command (the rest of the line) using shell</span>\n<span class=\"hljs-comment\"># d, drop = remove commit</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># These lines can be re-ordered; they are executed from top to bottom.</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># If you remove a line here THAT COMMIT WILL BE LOST.</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># However, if you remove everything, the rebase will be aborted.</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Note that empty commits are commented out</span>\n~\n~\n~</code></pre>\n\n<p>解释：我们刚刚执行的命令中 HEAD~2代表选择离HEAD最近的两条提交<br>下面注释的是提示，我们不需要管，只要专注前两行就ok</p>\n<ol start=\"2\">\n<li>把 第一行 和 第二行 交换顺序</li>\n</ol>\n<p><strong>小技巧：这个是vi编辑器，首先Esc ，进入命令模式，移动到第一行 按dd,本行就被剪切，pick a75ed74 add 5就变成了第一行，接着按 p刚刚剪切的就成了第二行，快速交换顺序</strong></p>\n<p>不会用vi建议百度篇教程学习一哈</p>\n<p>变成下面的样子</p>\n<pre><code class=\"hljs bash\">pick a75ed74 add 5\npick 8b485bb add 4</code></pre>\n\n<p>接着 Esc,:wq 保存退出<br>成功！</p>\n<p>git log查看，4 和 5 的顺序改变了<br><img src=\"/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA4MTkzNTQxLTQzOTMucG5n.png\"></p>\n<h2 id=\"假定，我们现在要删除-某一个提交，该怎么操作\"><a href=\"#假定，我们现在要删除-某一个提交，该怎么操作\" class=\"headerlink\" title=\"假定，我们现在要删除 某一个提交，该怎么操作\"></a>假定，我们现在要删除 某一个提交，该怎么操作</h2><p>我们来删除 add 4 的那条提交</p>\n<pre><code class=\"hljs bash\">git rebase -i HEAD~2</code></pre>\n\n<p>出现如下</p>\n<pre><code class=\"hljs bash\">pick a75ed74 add 5\npick 8b485bb add 4\n\n<span class=\"hljs-comment\"># Rebase 575fd8b..bb2a77d onto 575fd8b (1 command(s))</span>\n<span class=\"hljs-comment\"># .....略</span></code></pre>\n\n<p>我们删除 第二行</p>\n<p>接着 Esc,:wq 保存退出<br><img src=\"/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA0MTA0MTMwLTY1NjExOS5wbmc.png\"></p>\n<p>git log查看，4 和 5 的顺序改变了<br><img src=\"/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA0MTA0MzE2LTc3MzYwMC5wbmc.png\"></p>\n<h2 id=\"record-修改提交消息-提交内容不变\"><a href=\"#record-修改提交消息-提交内容不变\" class=\"headerlink\" title=\"record 修改提交消息(提交内容不变)\"></a>record 修改提交消息(提交内容不变)</h2><p>该reword命令与相似pick，但是使用后，重新设置过程将暂停并为您提供更改提交消息的机会。提交所做的任何更改均不受影响。</p>\n<p><strong>假定，我们现在要 修改某个提交的消息，该怎么操作</strong><br>修改一下 add 2 的提交消息</p>\n<p>git log 查看 add 2 距离 HEAD 有多少的距离，得：3</p>\n<pre><code class=\"hljs bash\">git rebase -i HEAD~3</code></pre>\n\n<p>出现如下</p>\n<pre><code class=\"hljs bash\">pick 9cd34c4 add 2\npick 63ce9fb add 3\npick 575fd8b add 5\n\n<span class=\"hljs-comment\"># Rebase 77bd0eb..575fd8b onto 77bd0eb (3 command(s))</span>\n<span class=\"hljs-comment\"># .... 略</span></code></pre>\n\n<p>我们只需要修改 第一行 add 2 ，其余保持不变</p>\n<pre><code class=\"hljs bash\">r 9cd34c4 add 2\npick 63ce9fb add 3\npick 575fd8b add 5\n\n<span class=\"hljs-comment\"># Rebase 77bd0eb..575fd8b onto 77bd0eb (3 command(s))</span>\n<span class=\"hljs-comment\"># .... 略</span></code></pre>\n\n<p>r 是 record简写</p>\n<p>接着 Esc,:wq 保存退出</p>\n<p>git会说 开始执行，接着弹出一个编辑窗口</p>\n<pre><code class=\"hljs bash\">add 2\n\n<span class=\"hljs-comment\"># Please enter the commit message for your changes. Lines starting</span>\n<span class=\"hljs-comment\"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Date:      Wed Mar 4 09:58:45 2020 +0800</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># interactive rebase in progress; onto 77bd0eb</span>\n<span class=\"hljs-comment\"># Last command done (1 command done):</span>\n<span class=\"hljs-comment\">#    r 9cd34c4 add 2</span>\n<span class=\"hljs-comment\"># Next commands to do (2 remaining commands):</span>\n<span class=\"hljs-comment\">#    pick 63ce9fb add 3</span>\n<span class=\"hljs-comment\">#    pick 575fd8b add 5</span>\n<span class=\"hljs-comment\"># You are currently editing a commit while rebasing branch &#x27;master&#x27; on &#x27;77bd0eb&#x27;.</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Changes to be committed:</span>\n<span class=\"hljs-comment\">#       new file:   2.txt</span>\n<span class=\"hljs-comment\">#</span></code></pre>\n\n<p>我们就可以修改 add 2 了</p>\n<p>下面的注释是对当前状态的一些说明</p>\n<p>大致是说，上一次执行的命令 是 <code>r 9cd34c4 add 2</code></p>\n<p>下面还有两条命令</p>\n<p>当前命令改变的committed的文件 是 2.txt 等等</p>\n<p><strong>修改 add 2</strong></p>\n<pre><code class=\"hljs bash\">add 2 ~ new comment</code></pre>\n\n<p>接着 Esc,:wq 保存退出</p>\n<p>成功<br><img src=\"/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA0MTA1OTEzLTE2Mzk3Ny5wbmc.png\"></p>\n<p>git log查看, 消息 “add 2” 变为了 “add 2 ~ new comment”<br><img src=\"/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA4MTkzODEzLTE4OTI4My5wbmc.png\"></p>\n<p>::只要不动pick的 顺序，就代表什么都不做::</p>\n<h2 id=\"edit修改提交\"><a href=\"#edit修改提交\" class=\"headerlink\" title=\"edit修改提交\"></a>edit修改提交</h2><p>如果您选择edit提交，则将有机会修改提交，这意味着您可以完全添加或更改提交。您还可以进行更多提交，然后再继续进行变基。这使您可以将大型提交拆分为较小的提交，或者删除在提交中所做的错误更改。</p>\n<p><strong>假定 我想要在两个提交之间 再加提交，怎么办</strong><br>假定，我们要在 add 3 和 add 5 之间 添加一条提交</p>\n<pre><code class=\"hljs bash\">git rebase -i HEAD~2</code></pre>\n\n<pre><code class=\"hljs bash\">pick 6934312 add 3\npick 5ce6dde add 5\n\n<span class=\"hljs-comment\"># Rebase 7f9d45d..5ce6dde onto 7f9d45d (2 command(s))</span>\n<span class=\"hljs-comment\"># ....</span></code></pre>\n\n<p>修改为</p>\n<pre><code class=\"hljs bash\">e 6934312 add 3\npick 5ce6dde add 5</code></pre>\n\n<p>接着 Esc,:wq 保存退出</p>\n<p>有如下</p>\n<pre><code class=\"hljs bash\">$ git rebase -i HEAD~2\nStopped at 6934312135c150bf74bead26e371df1443273ca4... add 3\nYou can amend the commit now, with\n\n        git commit --amend\n\nOnce you are satisfied with your changes, run\n\n        git rebase --<span class=\"hljs-built_in\">continue</span>\n\n\nxxxxxx MINGW32 ~/Desktop/git-demo (master|REBASE-i 1/2)</code></pre>\n\n<p>可以看到，我们的master分支多了REBASE-i 1/2</p>\n<p>我们尝试做一些修改，给3.txt 增加一些内容，然后提交</p>\n<pre><code class=\"hljs bash\">git add 3.txt\n\ngit commit -m <span class=\"hljs-string\">&quot;edit 3.txt&quot;</span>\n[detached HEAD 7262a57] edit 3.txt\n 1 file changed, 1 insertion(+)</code></pre>\n\n<p>接着，我们继续 rebase</p>\n<pre><code class=\"hljs bash\">git rebase --<span class=\"hljs-built_in\">continue</span>\nSuccessfully rebased and updated refs/heads/master.</code></pre>\n\n<p>git log 查看，在 add 5 和 add 3 中间 增加了我们刚刚的修改<br><img src=\"/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA0MTEzMDU2LTczMjkzMS5wbmc.png\"></p>\n<p><strong>假定 我想要单纯的修改这次提交内容和消息，怎么办</strong></p>\n<p>参照上面的做到这一步，我们选择提交的方式 加一个参数 git commit –amend修改</p>\n<pre><code class=\"hljs bash\">git add 3.txt\n\ngit commit --amend\n\n<span class=\"hljs-comment\"># 这样 就不会在多出一次提交</span>\n<span class=\"hljs-comment\"># 本次对 3.txt的修改会记录 到  add 3  这次提交记录中</span></code></pre>\n\n<p>接着结束这次 rebase</p>\n<pre><code class=\"hljs bash\">git rebase --<span class=\"hljs-built_in\">continue</span>\nSuccessfully rebased and updated refs/heads/master.</code></pre>\n\n<h2 id=\"squash合并提交\"><a href=\"#squash合并提交\" class=\"headerlink\" title=\"squash合并提交\"></a>squash合并提交</h2><p>squash</p>\n<p>该命令使您可以将两个或多个提交合并为一个提交。提交被压缩到其上方的提交中。Git使您有机会编写描述这两个更改的新提交消息。</p>\n<p><strong>假定，我想合并某几个提交，怎么办</strong></p>\n<p>如下<br><img src=\"/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA0MTIzODIyLTY3NTQyMy5wbmc.png\"></p>\n<p>我们合并 add 5 和 add 3</p>\n<pre><code class=\"hljs bash\">git rebase - i HEAD~2</code></pre>\n\n<pre><code class=\"hljs bash\">pick 6934312 add 3\npick 6fa47e4 add 5\n\n<span class=\"hljs-comment\"># Rebase 7f9d45d..6fa47e4 onto 7f9d45d (2 command(s))</span></code></pre>\n\n<p>修改为</p>\n<pre><code class=\"hljs bash\">pick 6934312 add 3\ns 6fa47e4 add 5</code></pre>\n\n<p>接着 Esc,:wq 保存退出</p>\n<p>开始执行变更</p>\n<p>然后 在弹出来的编辑框里 写提交信息</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># This is a combination of 2 commits.</span>\n<span class=\"hljs-comment\"># The first commit&#x27;s message is:</span>\n\nadd 3\n\n<span class=\"hljs-comment\"># This is the 2nd commit message:</span>\n\nadd 5\n\n<span class=\"hljs-comment\"># Please enter the commit message for your changes. Lines starting</span>\n<span class=\"hljs-comment\"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Date:      Wed Mar 4 09:59:04 2020 +0800</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># interactive rebase in progress; onto 7f9d45d</span>\n<span class=\"hljs-comment\"># Last commands done (2 commands done):</span>\n<span class=\"hljs-comment\">#    pick 6934312 add 3</span>\n<span class=\"hljs-comment\">#    s 6fa47e4 add 5</span>\n<span class=\"hljs-comment\"># No commands remaining.</span>\n<span class=\"hljs-comment\"># You are currently editing a commit while rebasing branch &#x27;master&#x27; on &#x27;7f9d45d&#x27;.</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Changes to be committed:</span>\n<span class=\"hljs-comment\">#       new file:   3.txt</span>\n<span class=\"hljs-comment\">#       new file:   5.txt</span></code></pre>\n\n<p>我们可以修改提交消息，默认是把两个消息都合并</p>\n<p>接着 Esc,:wq 保存退出</p>\n<p>git log查看，合并成功<br><img src=\"/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA0MTI0NjU3LTUwMDk0MC5wbmc.png\"></p>\n<h2 id=\"fixup合并提交，只保留较早的提交信息\"><a href=\"#fixup合并提交，只保留较早的提交信息\" class=\"headerlink\" title=\"fixup合并提交，只保留较早的提交信息\"></a>fixup合并提交，只保留较早的提交信息</h2><p>这类似于squash，但是要合并的提交已丢弃其消息。提交仅合并到其上方的提交中，并且较早提交的消息用于描述这两个更改。</p>\n<p>最后两次提交</p>\n<pre><code class=\"hljs bash\">git rebase -i HEAD~2</code></pre>\n\n<pre><code class=\"hljs bash\">pick 7f9d45d add 2 ~ new comment\npick 311adc9 add 3\n\n<span class=\"hljs-comment\"># Rebase 77bd0eb..311adc9 onto 77bd0eb (2 command(s))</span>\n<span class=\"hljs-comment\">#  ----------------------</span>\n<span class=\"hljs-comment\"># 变更为</span>\n<span class=\"hljs-comment\"># -----------------------</span>\n\npick 7f9d45d add 2 ~ new comment\nf 311adc9 add 3\n\n<span class=\"hljs-comment\"># 保存</span></code></pre>\n\n<h2 id=\"exec-执行任意shell命令\"><a href=\"#exec-执行任意shell命令\" class=\"headerlink\" title=\"exec 执行任意shell命令\"></a>exec 执行任意shell命令</h2><pre><code class=\"hljs bash\">git rebase -i HEAD~3\n\n\n<span class=\"hljs-comment\"># 弹出编辑框</span>\n<span class=\"hljs-comment\">#----------------------------</span>\npick 81fe4d0 添加test2.txt和test3.txt\npick 77bd0eb add 1\npick e7c68b8 add 2 ~ new comment\n\n<span class=\"hljs-comment\"># Rebase 258a059..e7c68b8 onto 258a059 (3 command(s))</span>\n<span class=\"hljs-comment\">#....</span>\n\n<span class=\"hljs-comment\"># ----------------</span>\n<span class=\"hljs-comment\"># 加一行 命令</span>\n<span class=\"hljs-comment\"># ---------------</span>\nx <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;Hello is echo do .......&quot;</span>\npick 81fe4d0 添加test2.txt和test3.txt\npick 77bd0eb add 1\npick e7c68b8 add 2 ~ new comment\n\n\n<span class=\"hljs-comment\">## 执行了我们刚刚键入的命令</span>\nExecuting: <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;Hello is echo do .......&quot;</span>\nHello is <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-keyword\">do</span> .......\nSuccessfully rebased and updated refs/heads/master.\n</code></pre>\n\n<p>其他</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># Commands:</span>\n<span class=\"hljs-comment\"># p, pick = use commit</span>\n<span class=\"hljs-comment\"># r, reword = use commit, but edit the commit message</span>\n<span class=\"hljs-comment\"># e, edit = use commit, but stop for amending</span>\n<span class=\"hljs-comment\"># s, squash = use commit, but meld into previous commit</span>\n<span class=\"hljs-comment\"># f, fixup = like &quot;squash&quot;, but discard this commit&#x27;s log message</span>\n<span class=\"hljs-comment\"># x, exec = run command (the rest of the line) using shell</span>\n<span class=\"hljs-comment\"># d, drop = remove commit</span></code></pre>\n\n<h2 id=\"drop\"><a href=\"#drop\" class=\"headerlink\" title=\"drop\"></a>drop</h2><p>删除提交<br>用法与 p,r,e,s,f,x 一致</p>\n<h2 id=\"命令写错了怎么办\"><a href=\"#命令写错了怎么办\" class=\"headerlink\" title=\"命令写错了怎么办\"></a>命令写错了怎么办</h2><p>看提示</p>\n<pre><code class=\"hljs bash\">You can fix this with <span class=\"hljs-string\">&#x27;git rebase --edit-todo&#x27;</span>.\n<span class=\"hljs-comment\"># 用 git rebase --edit--todo  来重新编辑命令</span></code></pre>\n\n","prev":{"title":" 占位图","slug":"other/5051f46252"},"next":{"title":" JavaScript 实现前端下载图片","slug":"javascript/0eec0217cd"},"categories":[{"name":"git","slug":"git","count":6,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":6,"path":"api/tags/git.json"}]}