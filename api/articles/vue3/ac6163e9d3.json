{"sort":57,"title":" vue3.0 是如何变快的？","slug":"vue3/ac6163e9d3","date":"2021-06-06T07:53:03.000Z","updated":"2021-06-17T11:25:09.051Z","comments":true,"path":"api/articles/vue3/ac6163e9d3.json","photos":[],"link":"","excerpt":"diff算法优化Vue2中的虚拟 dom 是进行全量的对比<br>Vue3新增了静态标记(PatchFlag)<br>在与上次虚拟节点进行对比时候,只对比带有 patch flash 的节点<br>并且可以通过 flag 的信息得知当前节点要对比的具体内容  ","covers":["/images/20210120113952295.png"],"content":"<h2 id=\"diff算法优化\"><a href=\"#diff算法优化\" class=\"headerlink\" title=\"diff算法优化\"></a>diff算法优化</h2><blockquote>\n<p>Vue2中的虚拟 <code>dom</code> 是进行全量的对比<br>Vue3新增了静态标记<code>(PatchFlag)</code><br>在与上次虚拟节点进行对比时候,只对比带有 <code>patch flash</code> 的节点<br>并且可以通过 <code>flag</code> 的信息得知当前节点要对比的具体内容  </p>\n</blockquote>\n<a id=\"more\"></a>\n\n<p><img src=\"/images/20210120113952295.png\"></p>\n<p><a href=\"https://template-explorer.vuejs.org/#%3Cdiv%20id%3D%22app%22%3E%7B%7B%20msg%20%7D%7D%3C%2Fdiv%3E\">vue2.0 代码转换</a><br><a href=\"https://vue-next-template-explorer.netlify.app/#%7B%22src%22%3A%22%3Cdiv%3EHello%20World!%3C%2Fdiv%3E%22%2C%22options%22%3A%7B%22mode%22%3A%22module%22%2C%22filename%22%3A%22Foo.vue%22%2C%22prefixIdentifiers%22%3Afalse%2C%22hoistStatic%22%3Afalse%2C%22cacheHandlers%22%3Afalse%2C%22scopeId%22%3Anull%2C%22inline%22%3Afalse%2C%22ssrCssVars%22%3A%22%7B%20color%20%7D%22%2C%22compatConfig%22%3A%7B%22MODE%22%3A3%7D%2C%22whitespace%22%3A%22condense%22%2C%22bindingMetadata%22%3A%7B%22TestComponent%22%3A%22setup-const%22%2C%22setupRef%22%3A%22setup-ref%22%2C%22setupConst%22%3A%22setup-const%22%2C%22setupLet%22%3A%22setup-let%22%2C%22setupMaybeRef%22%3A%22setup-maybe-ref%22%2C%22setupProp%22%3A%22props%22%2C%22vMySetupDir%22%3A%22setup-const%22%7D%7D%7D\">vue3.0代码转换</a></p>\n<h3 id=\"vue2-0转换\"><a href=\"#vue2-0转换\" class=\"headerlink\" title=\"vue2.0转换\"></a>vue2.0转换</h3><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>我是段落<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>我是段落<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>我是段落<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n\n<pre><code class=\"hljs js\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>) </span>&#123;\n  <span class=\"hljs-function\"><span class=\"hljs-title\">with</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">this</span></span>)</span> &#123;\n    <span class=\"hljs-keyword\">return</span> _c(<span class=\"hljs-string\">&#x27;div&#x27;</span>, [_c(<span class=\"hljs-string\">&#x27;p&#x27;</span>, [_v(<span class=\"hljs-string\">&quot;我是段落&quot;</span>)]), _c(<span class=\"hljs-string\">&#x27;p&#x27;</span>, [_v(<span class=\"hljs-string\">&quot;我是段落&quot;</span>)]), _c(<span class=\"hljs-string\">&#x27;p&#x27;</span>, [\n      _v(<span class=\"hljs-string\">&quot;我是段落&quot;</span>)\n    ]), _c(<span class=\"hljs-string\">&#x27;span&#x27;</span>, [_v(_s(msg))])])\n  &#125;\n&#125;</code></pre>\n\n<h3 id=\"vue3-0转换\"><a href=\"#vue3-0转换\" class=\"headerlink\" title=\"vue3.0转换\"></a>vue3.0转换</h3><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>我是段落<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>我是段落<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>我是段落<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre>\n\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> &#123; createVNode <span class=\"hljs-keyword\">as</span> _createVNode, toDisplayString <span class=\"hljs-keyword\">as</span> _toDisplayString, openBlock <span class=\"hljs-keyword\">as</span> _openBlock, createBlock <span class=\"hljs-keyword\">as</span> _createBlock &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;vue&quot;</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">render</span>(<span class=\"hljs-params\">_ctx, _cache, $props, $setup, $data, $options</span>) </span>&#123;\n  <span class=\"hljs-keyword\">return</span> (_openBlock(), _createBlock(<span class=\"hljs-string\">&quot;div&quot;</span>, <span class=\"hljs-literal\">null</span>, [\n    _createVNode(<span class=\"hljs-string\">&quot;p&quot;</span>, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">&quot;我是段落&quot;</span>),\n    _createVNode(<span class=\"hljs-string\">&quot;p&quot;</span>, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">&quot;我是段落&quot;</span>),\n    _createVNode(<span class=\"hljs-string\">&quot;p&quot;</span>, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">&quot;我是段落&quot;</span>),\n    _createVNode(<span class=\"hljs-string\">&quot;span&quot;</span>, <span class=\"hljs-literal\">null</span>, _toDisplayString(_ctx.msg), <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">/* TEXT */</span>)\n  ]))\n&#125;\n<span class=\"hljs-comment\">// Check the console for the AST</span></code></pre>\n\n<h2 id=\"hoistStatus静态提升\"><a href=\"#hoistStatus静态提升\" class=\"headerlink\" title=\"hoistStatus静态提升\"></a>hoistStatus静态提升</h2><blockquote>\n<p>Vue2中无论元素是否参与更新,每次都会重新创建,然后渲染<br>Vue3对于不参加更新的元素,会做静态提升,只会被创建一次,在渲染时直接<strong>复用</strong>第一次创建的,以达到性能提升,速度变快…  </p>\n</blockquote>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>我是段落<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>我是段落<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>我是段落<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> &#123; createVNode <span class=\"hljs-keyword\">as</span> _createVNode, toDisplayString <span class=\"hljs-keyword\">as</span> _toDisplayString, openBlock <span class=\"hljs-keyword\">as</span> _openBlock, createBlock <span class=\"hljs-keyword\">as</span> _createBlock &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;vue&quot;</span>\n\n<span class=\"hljs-keyword\">const</span> _hoisted_1 = <span class=\"hljs-comment\">/*#__PURE__*/</span>_createVNode(<span class=\"hljs-string\">&quot;p&quot;</span>, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">&quot;我是段落&quot;</span>, -<span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">/* HOISTED */</span>)\n<span class=\"hljs-keyword\">const</span> _hoisted_2 = <span class=\"hljs-comment\">/*#__PURE__*/</span>_createVNode(<span class=\"hljs-string\">&quot;p&quot;</span>, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">&quot;我是段落&quot;</span>, -<span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">/* HOISTED */</span>)\n<span class=\"hljs-keyword\">const</span> _hoisted_3 = <span class=\"hljs-comment\">/*#__PURE__*/</span>_createVNode(<span class=\"hljs-string\">&quot;p&quot;</span>, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">&quot;我是段落&quot;</span>, -<span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">/* HOISTED */</span>)\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">render</span>(<span class=\"hljs-params\">_ctx, _cache, $props, $setup, $data, $options</span>) </span>&#123;\n  <span class=\"hljs-keyword\">return</span> (_openBlock(), _createBlock(<span class=\"hljs-string\">&quot;div&quot;</span>, <span class=\"hljs-literal\">null</span>, [\n    _hoisted_1,\n    _hoisted_2,\n    _hoisted_3,\n    _createVNode(<span class=\"hljs-string\">&quot;span&quot;</span>, <span class=\"hljs-literal\">null</span>, _toDisplayString(_ctx.msg), <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">/* TEXT */</span>)\n  ]))\n&#125;\n\n<span class=\"hljs-comment\">// Check the console for the AST</span></code></pre>\n\n<h2 id=\"cacheHandlers事件侦听器缓存\"><a href=\"#cacheHandlers事件侦听器缓存\" class=\"headerlink\" title=\"cacheHandlers事件侦听器缓存\"></a>cacheHandlers事件侦听器缓存</h2><blockquote>\n<p>默认情况onClick会被视为动态绑定,所以每次都会去追踪它的变化<br>但是因为是统一和函数,所以没有追踪变化,直接缓存起来复用即可  </p>\n</blockquote>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\">&quot;myFn&quot;</span>&gt;</span>按钮<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre>\n\n<p>未开启事件监听缓缓存</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>) </span>&#123;\n  <span class=\"hljs-function\"><span class=\"hljs-title\">with</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">this</span></span>)</span> &#123;\n    <span class=\"hljs-keyword\">return</span> _c(<span class=\"hljs-string\">&#x27;div&#x27;</span>, [_c(<span class=\"hljs-string\">&#x27;button&#x27;</span>, &#123;\n      <span class=\"hljs-attr\">on</span>: &#123;\n        <span class=\"hljs-string\">&quot;onclick&quot;</span>: myFn\n      &#125;\n    &#125;, [_v(<span class=\"hljs-string\">&quot;按钮&quot;</span>)])])\n  &#125;\n&#125;</code></pre>\n\n<p>开启事件监听缓存</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> &#123; createVNode <span class=\"hljs-keyword\">as</span> _createVNode, openBlock <span class=\"hljs-keyword\">as</span> _openBlock, createBlock <span class=\"hljs-keyword\">as</span> _createBlock &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;vue&quot;</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">render</span>(<span class=\"hljs-params\">_ctx, _cache, $props, $setup, $data, $options</span>) </span>&#123;\n  <span class=\"hljs-keyword\">return</span> (_openBlock(), _createBlock(<span class=\"hljs-string\">&quot;div&quot;</span>, <span class=\"hljs-literal\">null</span>, [\n    _createVNode(<span class=\"hljs-string\">&quot;button&quot;</span>, &#123;\n      <span class=\"hljs-attr\">onOnclick</span>: _cache[<span class=\"hljs-number\">1</span>] || (_cache[<span class=\"hljs-number\">1</span>] = <span class=\"hljs-function\">(<span class=\"hljs-params\">...args</span>) =&gt;</span> (_ctx.myFn &amp;&amp; _ctx.myFn(...args)))\n    &#125;, <span class=\"hljs-string\">&quot;按钮&quot;</span>, <span class=\"hljs-number\">32</span> <span class=\"hljs-comment\">/* HYDRATE_EVENTS */</span>)\n  ]))\n&#125;\n\n<span class=\"hljs-comment\">// Check the console for the AST</span>\n</code></pre>\n\n","prev":{"title":" src 与 href 的区别","slug":"interview/f426fb17e9"},"next":{"title":" vue3.0 六大亮点","slug":"vue3/11682f46f1"},"categories":[{"name":"vue3","slug":"vue3","count":2,"path":"api/categories/vue3.json"}],"tags":[{"name":"vue3","slug":"vue3","count":2,"path":"api/tags/vue3.json"}]}