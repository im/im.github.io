{"sort":52,"title":" Linux软连接和硬链接","slug":"linux/fa6eb7f527","date":"2021-06-04T03:39:40.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/linux/fa6eb7f527.json","photos":[],"link":"","excerpt":"Linux软连接和硬链接Linux链接概念Linux链接分两种，一种被称为硬链接（Hard Link），另一种被称为符号链接（Symbolic Link）。默认情况下，ln命令产生硬链接。【硬连接】硬连接指通过索引节点来进行连接。在Linux的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index)。在Linux中，多个文件名指向同一索引节点是存在的。一般这种连接就是硬连接。硬连接的作用是允许一个文件拥有多个有效路径名，这样用户就可以建立硬连接到重要文件，以防止“误删”的功能。其原因如上所述，因为对应该目录的索引节点有一个以上的连接。只删除一个连接并不影响索引节点本身和其它的连接，只有当最后一个连接被删除后，文件的数据块及目录的连接才会被释放。也就是说，文件真正删除的条件是与之相关的所有硬连接文件均被删除。【软连接】另外一种连接称之为符号连接（Symbolic Link），也叫软连接。软链接文件有类似于Windows的快捷方式。它实际上是一个特殊的文件。在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。","covers":null,"content":"<p><a href=\"https://www.cnblogs.com/itech/archive/2009/04/10/1433052.html\">Linux软连接和硬链接</a></p>\n<h2 id=\"Linux链接概念\"><a href=\"#Linux链接概念\" class=\"headerlink\" title=\"Linux链接概念\"></a>Linux链接概念</h2><p>Linux链接分两种，一种被称为硬链接<code>（Hard Link）</code>，另一种被称为符号链接<code>（Symbolic Link）</code>。默认情况下，ln命令产生硬链接。</p>\n<h3 id=\"【硬连接】\"><a href=\"#【硬连接】\" class=\"headerlink\" title=\"【硬连接】\"></a>【硬连接】</h3><p>硬连接指通过索引节点来进行连接。在Linux的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index)。在Linux中，多个文件名指向同一索引节点是存在的。一般这种连接就是硬连接。硬连接的作用是允许一个文件拥有多个有效路径名，这样用户就可以建立硬连接到重要文件，以防止“误删”的功能。其原因如上所述，因为对应该目录的索引节点有一个以上的连接。只删除一个连接并不影响索引节点本身和其它的连接，只有当最后一个连接被删除后，文件的数据块及目录的连接才会被释放。也就是说，文件真正删除的条件是与之相关的所有硬连接文件均被删除。</p>\n<h3 id=\"【软连接】\"><a href=\"#【软连接】\" class=\"headerlink\" title=\"【软连接】\"></a>【软连接】</h3><p>另外一种连接称之为符号连接（Symbolic Link），也叫软连接。软链接文件有类似于Windows的快捷方式。它实际上是一个特殊的文件。在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"通过实验加深理解\"><a href=\"#通过实验加深理解\" class=\"headerlink\" title=\"通过实验加深理解\"></a>通过实验加深理解</h2><pre><code class=\"hljs bash\">[oracle@Linux]$ touch f1          <span class=\"hljs-comment\"># 创建一个测试文件f1</span>\n[oracle@Linux]$ ln f1 f2          <span class=\"hljs-comment\"># 创建f1的一个硬连接文件f2</span>\n[oracle@Linux]$ ln -s f1 f3       <span class=\"hljs-comment\"># 创建f1的一个符号连接文件f3</span>\n[oracle@Linux]$ ls -li            <span class=\"hljs-comment\"># -i参数显示文件的inode节点信息</span>\ntotal 0\n9797648 -rw-r--r--  2 oracle oinstall 0 Apr 21 08:11 f1\n9797648 -rw-r--r--  2 oracle oinstall 0 Apr 21 08:11 f2\n9797649 lrwxrwxrwx  1 oracle oinstall 2 Apr 21 08:11 f3 -&gt; f1\n从上面的结果中可以看出，硬连接文件f2与原文件f1的inode节点相同，均为9797648，然而符号连接文件的inode节点不同。\n[oracle@Linux]$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;I am f1 file&quot;</span> &gt;&gt;f1\n[oracle@Linux]$ cat f1\nI am f1 file\n[oracle@Linux]$ cat f2\nI am f1 file\n[oracle@Linux]$ cat f3\nI am f1 file\n[oracle@Linux]$ rm -f f1\n[oracle@Linux]$ cat f2\nI am f1 file\n[oracle@Linux]$ cat f3\ncat: f3: No such file or directory</code></pre>\n\n<p>通过上面的测试可以看出：当删除原始文件f1后，硬连接f2不受影响，但是符号连接f1文件无效</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>依此您可以做一些相关的测试，可以得到以下全部结论：</p>\n<ol>\n<li>删除符号连接f3,对f1,f2无影响；</li>\n<li>删除硬连接f2，对f1,f3也无影响；</li>\n<li>删除原文件f1，对硬连接f2没有影响，导致符号连接f3失效；</li>\n<li>同时删除原文件f1,硬连接f2，整个文件会真正的被删除。</li>\n</ol>\n","prev":{"title":" Node.js的版本升级","slug":"javascript/b893a6f276"},"next":{"title":" iframe 报错 Refused to display 'URL' in a frame because it set 'X-Frame-Options' to 'DENY'","slug":"question/d6d18596d2"},"categories":[{"name":"linux","slug":"linux","count":1,"path":"api/categories/linux.json"}],"tags":[{"name":"linux","slug":"linux","count":1,"path":"api/tags/linux.json"}]}