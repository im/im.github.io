{"sort":60,"title":" HTML5的文件离线储存怎么使用，工作原理是什么？","slug":"interview/de0df6d619","date":"2021-06-07T02:31:02.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/interview/de0df6d619.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p>HTML5离线存储存储功能非常强大，它的作用是：在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，自动更新缓存数据。</p>\n<h2 id=\"原理：\"><a href=\"#原理：\" class=\"headerlink\" title=\"原理：\"></a>原理：</h2><p>HTML5的离线存储是基于一个新建的.appcache文件的，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示。</p>\n<h2 id=\"怎么用：\"><a href=\"#怎么用：\" class=\"headerlink\" title=\"怎么用：\"></a>怎么用：</h2><p>首先，在html页面头部加入一个manifest的属性:</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">HTML</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">manifest</span> = <span class=\"hljs-string\">&quot;cache.manifest&quot;</span>&gt;</span>\n...\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></code></pre>\n\n<p>然后书写cache.manifest文件：</p>\n<pre><code class=\"hljs avrasm\">CACHE MANIFEST\n<span class=\"hljs-meta\">#v0.11</span>\n\n<span class=\"hljs-symbol\">CACHE:</span>\njs/app.js\ncss/style.css\n\n<span class=\"hljs-symbol\">NETWORK:</span>\nresourse/logo.png\n\n<span class=\"hljs-symbol\">FALLBACK:</span>\n/ /offline.html</code></pre>\n\n<p>manifest （即 .appcache 文件）文件是简单的文本文件，可分为三个部分：</p>\n<h2 id=\"CACHE-：\"><a href=\"#CACHE-：\" class=\"headerlink\" title=\"CACHE ：\"></a>CACHE ：</h2><p>在此标题下列出的文件将在首次下载后进行缓存。（由于包含manifest文件的页面将被自动离线存储，所以不需要把页面自身也列出来）</p>\n<h2 id=\"NETWORK-：\"><a href=\"#NETWORK-：\" class=\"headerlink\" title=\"NETWORK ：\"></a>NETWORK ：</h2><p>在此标题下列出的文件需要与服务器的连接，且不会被缓存，离线时无法使用。 <br>可以使用 “*” 来指示所有其他资源/文件都需要因特网连接：</p>\n<pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">NETWORK:</span> *</code></pre>\n\n<p>如果在CACHE和NETWORK中有一个相同的资源，那么这个资源还是会被离线存储，也就是说CACHE的优先级更高。</p>\n<h2 id=\"FALLBACK：\"><a href=\"#FALLBACK：\" class=\"headerlink\" title=\"FALLBACK：\"></a>FALLBACK：</h2><p>在此标题下列出的文件规定当页面无法访问时的回退页面。比如上面这个文件表示的就是如果访问根目录下任何一个资源失败了，那么就去访问offline.html。</p>\n<h2 id=\"浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？\"><a href=\"#浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？\" class=\"headerlink\" title=\"浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？\"></a>浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？</h2><p>在线的情况下，浏览器发现html头部有manifest属性，它会请求manifest文件，如果是第一次访问app，那么浏览器就会根据manifest文件的内容下载相应的资源并且进行离线存储。如果已经访问过app并且资源已经离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的manifest文件与旧的manifest文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，那么就会重新下载文件中的资源并进行离线存储。<br>离线的情况下，浏览器就直接使用离线存储的资源。</p>\n","prev":{"title":" 如何实现浏览器内多个标签页之间的通信？","slug":"interview/0bab1e5161"},"next":{"title":" sessionStorage 、localStorage 和 cookie 之间的区别","slug":"interview/a6f7da3b77"},"categories":[{"name":"interview","slug":"interview","count":9,"path":"api/categories/interview.json"}],"tags":[{"name":"interview","slug":"interview","count":9,"path":"api/tags/interview.json"},{"name":"html","slug":"html","count":2,"path":"api/tags/html.json"}]}