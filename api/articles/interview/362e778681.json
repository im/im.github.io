{"sort":31,"title":" 3. 用递归算法实现，数组长度为5且元素的随机数在2-32间不重复的值","slug":"interview/362e778681","date":"2020-12-03T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/interview/362e778681.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h2><p>这是一道大题目，把考点拆成了4个小项；需要侯选人用递归算法实现（限制15行代码以内实现；限制时间10分钟内完成）： </p>\n<ul>\n<li>生成一个长度为5的空数组 <code>arr</code> 。 </li>\n<li>生成一个（2－32）之间的随机整数 <code>rand</code>。</li>\n<li>把随机数 <code>rand</code> 插入到数组 <code>arr</code> 内，如果数组arr内已存在与 <code>rand</code> 相同的数字，则重新生成随机数<code>rand</code>并插入到<code>arr</code>内[需要使用递归实现，不能使用 <code>for/while</code> 等循环] </li>\n<li>最终输出一个长度为5，且内容不重复的数组 <code>arr</code> 。</li>\n</ul>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> arr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>(<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-keyword\">const</span> randomNum = <span class=\"hljs-function\">() =&gt;</span> (<span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random() * <span class=\"hljs-number\">31</span> + <span class=\"hljs-number\">2</span>))\n<span class=\"hljs-keyword\">const</span> randomArr = <span class=\"hljs-function\">(<span class=\"hljs-params\">n</span>) =&gt;</span> &#123;\n    <span class=\"hljs-keyword\">if</span> (n === <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> arr;\n    <span class=\"hljs-keyword\">const</span> num = randomNum();\n    <span class=\"hljs-keyword\">if</span> (arr.includes(num)) <span class=\"hljs-keyword\">return</span> randomArr(n)\n    arr[n -<span class=\"hljs-number\">1</span>] = num;\n    <span class=\"hljs-keyword\">return</span> randomArr(n - <span class=\"hljs-number\">1</span>)\n&#125;;\nrandomArr(arr.length)\n</code></pre>\n\n","prev":{"title":" 1. 页面导入样式时，使用link和@import有什么区别？","slug":"interview/d9026b0618"},"next":{"title":" 2. 圣杯布局和双飞翼布局的理解和区别，并用代码实现","slug":"interview/82674f606e"},"categories":[{"name":"interview","slug":"interview","count":9,"path":"api/categories/interview.json"}],"tags":[{"name":"interview","slug":"interview","count":9,"path":"api/tags/interview.json"},{"name":"everyday","slug":"everyday","count":7,"path":"api/tags/everyday.json"}]}