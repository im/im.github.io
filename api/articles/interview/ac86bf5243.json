{"sort":48,"title":" 为什么要用setTimeout来模拟setInterval","slug":"interview/ac86bf5243","date":"2021-06-02T01:49:36.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/interview/ac86bf5243.json","photos":[],"link":"","excerpt":"setTimeout(fn,time): 等待time时间后执行fn<br>setInterval(fn,time):  每隔time时间执行fn我们希望setInterval是每隔一段时间自动执行，但是实际应用中，setInterval并不会按照我们预想的那样，它通常存在如下两个缺点。1. 在执行的时候可能会跳过指定时间间隔2. 多个定时器函数会立刻执行我们就实际场景来说一下这两个缺陷","covers":["/images/20200609111645389.png"],"content":"<p>setTimeout(fn,time): 等待time时间后执行fn<br>setInterval(fn,time):  每隔time时间执行fn</p>\n<p>我们希望setInterval是每隔一段时间自动执行，但是实际应用中，setInterval并不会按照我们预想的那样，它通常存在如下两个缺点。</p>\n<pre><code>1. 在执行的时候可能会跳过指定时间间隔\n2. 多个定时器函数会立刻执行\n</code></pre>\n<p>我们就实际场景来说一下这两个缺陷</p>\n<a id=\"more\"></a>\n\n<h2 id=\"时间间隔\"><a href=\"#时间间隔\" class=\"headerlink\" title=\"时间间隔\"></a>时间间隔</h2><p>首先明确一个概念，定时器的时间间隔指的是什么？<br>它不是指函数的执行时间，而是函数<strong>被推入到消息队列的时间</strong>。<br>也就是说每隔time时间，fn就会被放入消息队列中，而不是执行。另外何时执行取决于何时被主线程的事件循环取到</p>\n<p>另外，如果前一个任务没有被执行，也就是还处于消息队列中怎么办呢？ 浏览器规定<strong>：只有当前消息队列中不存在该任务，才会将下一个任务推进去</strong></p>\n<p><img src=\"/images/20200609111645389.png\"></p>\n<p>我们分析一下上面的情况，</p>\n<pre><code>* 隔了100ms之后，将t1推进去，因为js栈中主进程还没有执行完，所以t1这时候等待执行，\n* 又过了100ms，t1已经执行，t2被压入队列中\n* 又过了100ms，t1还没执行完，t2还存在在消息队列中，所以t3根据规定不能被压入队列中\n</code></pre>\n<p>所以这时候你就会发现，t1 、 t2是连续执行的，他们之间没有时间间隔，满足不了我们的需求。</p>\n<p>而我们可以用setTimeout模拟来弥补这两个缺陷。</p>\n<h2 id=\"setTimeout-模拟-setInterval\"><a href=\"#setTimeout-模拟-setInterval\" class=\"headerlink\" title=\"setTimeout 模拟 setInterval\"></a>setTimeout 模拟 setInterval</h2><p>可以这么理解：<br>setTimeout执行后会立刻将fn放入到消息队列中，而setInterval每次在放入之前都会判断消息队列中存不存在上一个任务。</p>\n<p>setTimeout的执行机制，也就是浏览器的事件循环机制，setTimeout是一个宏任务，当js栈空了，就会依次执行宏任务。</p>\n<p>代码实现：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">a</span>(<span class=\"hljs-params\"></span>)</span>&#123;\n    <span class=\"hljs-comment\">//.....</span>\n    <span class=\"hljs-built_in\">setTimeout</span>(a,time)\n\n&#125;,time)</code></pre>\n\n<h2 id=\"优点：\"><a href=\"#优点：\" class=\"headerlink\" title=\"优点：\"></a>优点：</h2><p>在一个定时器执行完以前不会插入另一个定时器<br>确保了每个函数执行的等待时间间隔</p>\n","prev":{"title":" 接口","slug":"typescript/c4ab7b1814"},"next":{"title":" 枚举","slug":"typescript/1c6b93719a"},"categories":[{"name":"Interview","slug":"Interview","count":3,"path":"api/categories/Interview.json"}],"tags":[{"name":"Interview","slug":"Interview","count":3,"path":"api/tags/Interview.json"},{"name":"javascript","slug":"javascript","count":25,"path":"api/tags/javascript.json"}]}