{"name":"Interview","slug":"Interview","count":3,"postlist":[{"title":" 如何实现浏览器内多个标签页之间的通信？","slug":"interview/0bab1e5161","date":"2021-06-07T02:47:41.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/interview/0bab1e5161.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote>\n<p>本题主要考察数据存储的知识，数据存储有本地和服务器存储两种方式。这里主要讲解用本地存储方式解决。即调用 localStorage、Cookie等本地存储方式。  </p>\n</blockquote>\n<h2 id=\"第一种-调用localStorage\"><a href=\"#第一种-调用localStorage\" class=\"headerlink\" title=\"第一种 调用localStorage\"></a>第一种 调用localStorage</h2><p>在一个标签页里面使用 localStorage.setItem(key,value)添加（修改、删除）内容；<br>在另一个标签页里面监听 storage 事件。<br>即可得到 localstorge 存储的值，实现不同标签页之间的通信。</p>\n<p>标签页1：</p>\n<pre><code class=\"hljs js\">&lt;input id=<span class=\"hljs-string\">&quot;name&quot;</span>&gt;  \n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;button&quot;</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;btn&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;提交&quot;</span>&gt;</span>  </span>\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"javascript\">  </span></span>\n<span class=\"javascript\"><span class=\"xml\">    $(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>&#123;    </span></span>\n<span class=\"javascript\"><span class=\"xml\">        $(<span class=\"hljs-string\">&quot;#btn&quot;</span>).click(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>&#123;    </span></span>\n<span class=\"javascript\"><span class=\"xml\">            <span class=\"hljs-keyword\">var</span> name=$(<span class=\"hljs-string\">&quot;#name&quot;</span>).val();    </span></span>\n<span class=\"javascript\"><span class=\"xml\">            <span class=\"hljs-built_in\">localStorage</span>.setItem(<span class=\"hljs-string\">&quot;name&quot;</span>, name);   </span></span>\n<span class=\"javascript\"><span class=\"xml\">        &#125;);    </span></span>\n<span class=\"javascript\"><span class=\"xml\">    &#125;);    </span></span>\n<span class=\"javascript\"><span class=\"xml\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>  </span></code></pre>\n\n<p>标签页2：</p>\n<pre><code class=\"hljs js\">&lt;script type=<span class=\"hljs-string\">&quot;text/javascript&quot;</span>&gt;  \n    $(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>&#123;   \n        <span class=\"hljs-built_in\">window</span>.addEventListener(<span class=\"hljs-string\">&quot;storage&quot;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">event</span>)</span>&#123;    \n            <span class=\"hljs-built_in\">console</span>.log(event.key + <span class=\"hljs-string\">&quot;=&quot;</span> + event.newValue);    \n        &#125;);     \n    &#125;);  \n&lt;/script&gt;</code></pre>\n\n<h2 id=\"第二种-调用cookie-setInterval\"><a href=\"#第二种-调用cookie-setInterval\" class=\"headerlink\" title=\"第二种 调用cookie+setInterval()\"></a>第二种 调用cookie+setInterval()</h2><p>将要传递的信息存储在cookie中，每隔一定时间读取cookie信息，即可随时获取要传递的信息。</p>\n<p>页面1：</p>\n<pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;name&quot;</span>&gt;</span>  \n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;button&quot;</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;btn&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;提交&quot;</span>&gt;</span>  \n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"javascript\">  </span>\n<span class=\"javascript\">    $(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>&#123;    </span>\n<span class=\"javascript\">        $(<span class=\"hljs-string\">&quot;#btn&quot;</span>).click(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>&#123;    </span>\n<span class=\"javascript\">            <span class=\"hljs-keyword\">var</span> name=$(<span class=\"hljs-string\">&quot;#name&quot;</span>).val();    </span>\n<span class=\"javascript\">            <span class=\"hljs-built_in\">document</span>.cookie=<span class=\"hljs-string\">&quot;name=&quot;</span>+name;    </span>\n<span class=\"javascript\">        &#125;);    </span>\n<span class=\"javascript\">    &#125;);    </span>\n<span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n\n<p>页面2：</p>\n<pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"javascript\">  </span>\n<span class=\"javascript\">    $(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>&#123;   </span>\n<span class=\"javascript\">        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getCookie</span>(<span class=\"hljs-params\">key</span>) </span>&#123;    </span>\n<span class=\"javascript\">            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">JSON</span>.parse(<span class=\"hljs-string\">&quot;&#123;\\&quot;&quot;</span> + <span class=\"hljs-built_in\">document</span>.cookie.replace(<span class=\"hljs-regexp\">/;\\s+/gim</span>,<span class=\"hljs-string\">&quot;\\&quot;,\\&quot;&quot;</span>).replace(<span class=\"hljs-regexp\">/=/gim</span>, <span class=\"hljs-string\">&quot;\\&quot;:\\&quot;&quot;</span>) + <span class=\"hljs-string\">&quot;\\&quot;&#125;&quot;</span>)[key];    </span>\n<span class=\"javascript\">        &#125;     </span>\n<span class=\"javascript\">        <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>&#123;    </span>\n<span class=\"javascript\">            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;name=&quot;</span> + getCookie(<span class=\"hljs-string\">&quot;name&quot;</span>));    </span>\n<span class=\"javascript\">        &#125;, <span class=\"hljs-number\">10000</span>);    </span>\n<span class=\"javascript\">    &#125;);  </span>\n<span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n\n\n","text":"本题主要考察数据存储的知识，数据存储有本地和服务器存储两种方式。这里主要讲解用本地存储方式解决。即调用 localStorage、Cookie等本地存储方式。  第一种 调用localStorage在一个标签页里面使用 localStorage.setItem(key,value","link":"","raw":null,"photos":[],"categories":[{"name":"Interview","slug":"Interview","count":3,"path":"api/categories/Interview.json"}],"tags":[{"name":"Interview","slug":"Interview","count":3,"path":"api/tags/Interview.json"},{"name":"javascript","slug":"javascript","count":25,"path":"api/tags/javascript.json"}]},{"title":" sessionStorage 、localStorage 和 cookie 之间的区别","slug":"interview/a6f7da3b77","date":"2021-06-07T02:23:33.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/interview/a6f7da3b77.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"共同点\"><a href=\"#共同点\" class=\"headerlink\" title=\"共同点\"></a>共同点</h2><p>都是保存在浏览器端，且同源的。</p>\n<h2 id=\"区别\"><a href=\"#区别\" class=\"headerlink\" title=\"区别\"></a>区别</h2><ul>\n<li>cookie数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递。而sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。cookie数据还有路径（path）的概念，可以限制cookie只属于某个路径下。</li>\n<li>存储大小限制也不同，cookie数据不能超过4k，同时因为每次http请求都会携带cookie，所以cookie只适合保存很小的数据，如会话标识。sessionStorage和localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大。</li>\n<li>数据有效期不同，sessionStorage：仅在当前浏览器窗口关闭前有效，自然也就不可能持久保持；localStorage：始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；cookie只在设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭。</li>\n<li>作用域不同，sessionStorage<strong>不在</strong>不同的浏览器窗口中共享，即使是同一个页面；localStorage 在所有同源窗口中都是共享的；cookie也是在所有同源窗口中都是共享的。</li>\n<li>Web Storage 支持事件通知机制，可以将数据更新的通知发送给监听者。</li>\n<li>Web Storage 的 api 接口使用更方便。</li>\n</ul>\n","text":"共同点都是保存在浏览器端，且同源的。区别cookie数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递。而sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。cookie数据还有路径（path）的概","link":"","raw":null,"photos":[],"categories":[{"name":"Interview","slug":"Interview","count":3,"path":"api/categories/Interview.json"}],"tags":[{"name":"Interview","slug":"Interview","count":3,"path":"api/tags/Interview.json"},{"name":"javascript","slug":"javascript","count":25,"path":"api/tags/javascript.json"}]},{"title":" 为什么要用setTimeout来模拟setInterval","slug":"interview/ac86bf5243","date":"2021-06-02T01:49:36.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/interview/ac86bf5243.json","excerpt":"<p>setTimeout(fn,time): 等待time时间后执行fn<br>setInterval(fn,time):  每隔time时间执行fn</p>\n<p>我们希望setInterval是每隔一段时间自动执行，但是实际应用中，setInterval并不会按照我们预想的那样，它通常存在如下两个缺点。</p>\n<pre><code>1. 在执行的时候可能会跳过指定时间间隔\n2. 多个定时器函数会立刻执行\n</code></pre>\n<p>我们就实际场景来说一下这两个缺陷</p>","keywords":null,"cover":"/images/20200609111645389.png","content":null,"text":"setTimeout(fn,time): 等待time时间后执行fn<br>setInterval(fn,time):  每隔time时间执行fn我们希望setInterval是每隔一段时间自动执行，但是实际应用中，setInterval并不会按照我们预想的那样，它通常存在如下两","link":"","raw":null,"photos":[],"categories":[{"name":"Interview","slug":"Interview","count":3,"path":"api/categories/Interview.json"}],"tags":[{"name":"Interview","slug":"Interview","count":3,"path":"api/tags/Interview.json"},{"name":"javascript","slug":"javascript","count":25,"path":"api/tags/javascript.json"}]}]}