{"name":"git","slug":"git","count":6,"postlist":[{"title":" git 常用命令","slug":"git/09dfcc188e","date":"2019-02-03T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/git/09dfcc188e.json","excerpt":"<h3 id=\"恢复修改过的文件\"><a href=\"#恢复修改过的文件\" class=\"headerlink\" title=\"恢复修改过的文件\"></a>恢复修改过的文件</h3><pre><code class=\"hljs bash\">git checkout file_name</code></pre>\n\n<h3 id=\"获取远程分支\"><a href=\"#获取远程分支\" class=\"headerlink\" title=\"获取远程分支\"></a>获取远程分支</h3><pre><code class=\"hljs bash\">git checkout --track origin/branch_name</code></pre>","keywords":null,"cover":null,"content":null,"text":"恢复修改过的文件git checkout file_name获取远程分支git checkout --track origin/branch_name本地分支关联远程分支git branch --set-upstream-to=origin/[branch_name] [bran","link":"","raw":null,"photos":[],"categories":[{"name":"git","slug":"git","count":6,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":6,"path":"api/tags/git.json"}]},{"title":" git submodule","slug":"git/38399f8bee","date":"2019-04-09T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/git/38399f8bee.json","excerpt":"<h3 id=\"添加\"><a href=\"#添加\" class=\"headerlink\" title=\"添加\"></a>添加</h3><pre><code class=\"hljs bash\">git submodule add -b [指定分支] [仓库地址] [路径]\n\nexample:\n\ngit submodule add -b icarus https://github.com/im/hexo-theme.git themes/icarus</code></pre>\n\n<p>命令执行完成，会在当前工程根路径下生成一个名为 <code>.gitmodules</code> 的文件，其中记录了子模块的信息。</p>\n<h3 id=\"gitmodules\"><a href=\"#gitmodules\" class=\"headerlink\" title=\".gitmodules\"></a>.gitmodules</h3><pre><code class=\"hljs ini\"><span class=\"hljs-section\">[submodule &quot;themes/icarus&quot;]</span>\n    <span class=\"hljs-attr\">path</span> = themes/icarus\n    <span class=\"hljs-attr\">url</span> = https://github.com/im/hexo-theme.git\n    <span class=\"hljs-attr\">branch</span> = icarus</code></pre>","keywords":null,"cover":null,"content":null,"text":"添加git submodule add -b [指定分支] [仓库地址] [路径]example:git submodule add -b icarus https://github.com/im/hexo-theme.git themes/icarus命令执行完成，会在当前工程","link":"","raw":null,"photos":[],"categories":[{"name":"git","slug":"git","count":6,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":6,"path":"api/tags/git.json"}]},{"title":" git rebase -i","slug":"git/516fccc759","date":"2019-05-12T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/git/516fccc759.json","excerpt":"<h2 id=\"变基时有六个命令可用：\"><a href=\"#变基时有六个命令可用：\" class=\"headerlink\" title=\"变基时有六个命令可用：\"></a>变基时有六个命令可用：</h2><ul>\n<li><p>pick<br>pick只是意味着包括提交。重新进行命令时，重新安排pick命令的顺序会更改提交的顺序。如果选择不包括提交，则应删除整行。</p>\n</li>\n<li><p>reword<br>该reword命令与相似pick，但是使用后，重新设置过程将暂停并为您提供更改提交消息的机会。提交所做的任何更改均不受影响。</p>\n</li>\n<li><p>edit<br>如果您选择edit提交，则将有机会修改提交，这意味着您可以完全添加或更改提交。您还可以进行更多提交，然后再继续进行变基。这使您可以将大型提交拆分为较小的提交，或者删除在提交中所做的错误更改。</p>\n</li>\n<li><p>squash<br>该命令使您可以将两个或多个提交合并为一个提交。提交被压缩到其上方的提交中。Git使您有机会编写描述这两个更改的新提交消息。</p>\n</li>\n<li><p>fixup<br>这类似于squash，但是要合并的提交已丢弃其消息。提交仅合并到其上方的提交中，并且较早提交的消息用于描述这两个更改。</p>\n</li>\n<li><p>exec<br>这使您可以对提交运行任意的Shell命令。</p>\n</li>\n</ul>","keywords":null,"cover":"/images/aHR0cHM6Ly9naXRlZS5jb20vcmVuc2hlbl8wNTIvbXlOb3RlLWltZy9yYXcvbWFzdGVyL2ltYWdlLzIwMjAwMzA4MTkzNTQxLTQzOTMucG5n.png","content":null,"text":"变基时有六个命令可用：pick<br>pick只是意味着包括提交。重新进行命令时，重新安排pick命令的顺序会更改提交的顺序。如果选择不包括提交，则应删除整行。reword<br>该reword命令与相似pick，但是使用后，重新设置过程将暂停并为您提供更改提交消息的机会。提交所","link":"","raw":null,"photos":[],"categories":[{"name":"git","slug":"git","count":6,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":6,"path":"api/tags/git.json"}]},{"title":" git 添加 ssh key","slug":"git/59a209dce6","date":"2019-01-24T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/git/59a209dce6.json","excerpt":"<ul>\n<li>  创建 SSH Key<pre><code class=\"hljs bash\">ssh-keygen -t rsa -C <span class=\"hljs-string\">&quot;tangxiaomiemail@gmail.com&quot;</span>\n<span class=\"hljs-built_in\">cd</span> ~/.ssh\ncat id_rsa.pub</code></pre>\n\n</li>\n</ul>\n<p>如果一切顺利的话，可以在用户主目录里找到 .ssh 目录，里面有 <code>id_rsa</code> 和 <code>id_rsa.pub</code> 两个文件，这两个就是 SSH Key 的秘钥对，id_rsa 是私钥，不能泄露出去，id_rsa.pub 是公钥，可以放心地告诉任何人.</p>","keywords":null,"cover":null,"content":null,"text":"  创建 SSH Keyssh-keygen -t rsa -C &quot;tangxiaomiemail@gmail.com&quot;cd ~/.sshcat id_rsa.pub如果一切顺利的话，可以在用户主目录里找到 .ssh 目录，里面有 id_rsa 和 id_rs","link":"","raw":null,"photos":[],"categories":[{"name":"git","slug":"git","count":6,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":6,"path":"api/tags/git.json"}]},{"title":" git 修改远程仓库地址","slug":"git/c4b1781fcc","date":"2019-03-03T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/git/c4b1781fcc.json","excerpt":"<h2 id=\"命令直接修改\"><a href=\"#命令直接修改\" class=\"headerlink\" title=\"命令直接修改\"></a>命令直接修改</h2><pre><code class=\"hljs bash\">git remote set-url origin [url]</code></pre>\n\n<h2 id=\"先删后加\"><a href=\"#先删后加\" class=\"headerlink\" title=\"先删后加\"></a>先删后加</h2><pre><code class=\"hljs bash\">git remote rm origin\ngit remote add origin [url]</code></pre>","keywords":null,"cover":null,"content":null,"text":"命令直接修改git remote set-url origin [url]先删后加git remote rm origingit remote add origin [url]直接修改配置文件cd .gitvim config[core]    repositoryformatv","link":"","raw":null,"photos":[],"categories":[{"name":"git","slug":"git","count":6,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":6,"path":"api/tags/git.json"}]},{"title":" SVN与Git比较的优缺点差异","slug":"git/91c8e247e4","date":"2019-10-14T00:00:00.000Z","updated":"2021-06-17T11:25:09.047Z","comments":true,"path":"api/articles/git/91c8e247e4.json","excerpt":"<p><a href=\"https://www.cnblogs.com/Sungeek/p/9152223.html\">SVN与Git比较的优缺点差异</a></p>\n<h2 id=\"一、-集中式vs分布式\"><a href=\"#一、-集中式vs分布式\" class=\"headerlink\" title=\"一、 集中式vs分布式\"></a>一、 集中式vs分布式</h2><h3 id=\"1-Subversion属于集中式的版本控制系统\"><a href=\"#1-Subversion属于集中式的版本控制系统\" class=\"headerlink\" title=\"1. Subversion属于集中式的版本控制系统\"></a>1. Subversion属于集中式的版本控制系统</h3><p>集中式的版本控制系统都有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。<br> <img src=\"/images/aHR0cHM6Ly9pbWFnZXMyMDE4LmNuYmxvZ3MuY29tL2Jsb2cvODcyNjEwLzIwMTgwNi84NzI2MTAtMjAxODA2MDgxNDU5NDY3ODktMTE3NjM5NjE1Mi5wbmc.png\"></p>","keywords":null,"cover":"/images/aHR0cHM6Ly9pbWFnZXMyMDE4LmNuYmxvZ3MuY29tL2Jsb2cvODcyNjEwLzIwMTgwNi84NzI2MTAtMjAxODA2MDgxNDU5NDY3ODktMTE3NjM5NjE1Mi5wbmc.png","content":null,"text":"SVN与Git比较的优缺点差异一、 集中式vs分布式1. Subversion属于集中式的版本控制系统集中式的版本控制系统都有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。<br>  [Figure] ","link":"","raw":null,"photos":[],"categories":[{"name":"git","slug":"git","count":6,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":6,"path":"api/tags/git.json"}]}]}